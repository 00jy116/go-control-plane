// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/trace/v2alpha/xray.proto

package envoy_config_trace_v2alpha

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	core "github.com/envoyproxy/go-control-plane/envoy/api/v2/core"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type XRayConfig struct {
	DaemonEndpoint       *core.SocketAddress `protobuf:"bytes,1,opt,name=daemon_endpoint,json=daemonEndpoint,proto3" json:"daemon_endpoint,omitempty"`
	SegmentName          string              `protobuf:"bytes,2,opt,name=segment_name,json=segmentName,proto3" json:"segment_name,omitempty"`
	SamplingRuleManifest *core.DataSource    `protobuf:"bytes,3,opt,name=sampling_rule_manifest,json=samplingRuleManifest,proto3" json:"sampling_rule_manifest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *XRayConfig) Reset()         { *m = XRayConfig{} }
func (m *XRayConfig) String() string { return proto.CompactTextString(m) }
func (*XRayConfig) ProtoMessage()    {}
func (*XRayConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c272343b96f21fb4, []int{0}
}

func (m *XRayConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XRayConfig.Unmarshal(m, b)
}
func (m *XRayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XRayConfig.Marshal(b, m, deterministic)
}
func (m *XRayConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XRayConfig.Merge(m, src)
}
func (m *XRayConfig) XXX_Size() int {
	return xxx_messageInfo_XRayConfig.Size(m)
}
func (m *XRayConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_XRayConfig.DiscardUnknown(m)
}

var xxx_messageInfo_XRayConfig proto.InternalMessageInfo

func (m *XRayConfig) GetDaemonEndpoint() *core.SocketAddress {
	if m != nil {
		return m.DaemonEndpoint
	}
	return nil
}

func (m *XRayConfig) GetSegmentName() string {
	if m != nil {
		return m.SegmentName
	}
	return ""
}

func (m *XRayConfig) GetSamplingRuleManifest() *core.DataSource {
	if m != nil {
		return m.SamplingRuleManifest
	}
	return nil
}

func init() {
	proto.RegisterType((*XRayConfig)(nil), "envoy.config.trace.v2alpha.XRayConfig")
}

func init() {
	proto.RegisterFile("envoy/config/trace/v2alpha/xray.proto", fileDescriptor_c272343b96f21fb4)
}

var fileDescriptor_c272343b96f21fb4 = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x86, 0x49, 0xee, 0xa5, 0xd2, 0xa9, 0x68, 0x09, 0xa2, 0xa5, 0x58, 0x2c, 0x82, 0x50, 0x5c,
	0xcc, 0x40, 0x7c, 0x00, 0x31, 0xea, 0xc2, 0x85, 0x52, 0xd2, 0x4d, 0x77, 0xe1, 0x34, 0x39, 0xad,
	0x83, 0xc9, 0xcc, 0x30, 0x33, 0x09, 0xcd, 0xce, 0xe7, 0xf2, 0x09, 0xdc, 0xba, 0xf3, 0x59, 0x5c,
	0x49, 0x33, 0xc9, 0x4a, 0xdd, 0x0d, 0x9c, 0xef, 0x3b, 0xff, 0xcf, 0x19, 0x72, 0x81, 0xa2, 0x92,
	0x35, 0x4b, 0xa5, 0x58, 0xf3, 0x0d, 0xb3, 0x1a, 0x52, 0x64, 0x55, 0x08, 0xb9, 0x7a, 0x06, 0xb6,
	0xd5, 0x50, 0x53, 0xa5, 0xa5, 0x95, 0xc1, 0xb8, 0xc1, 0xa8, 0xc3, 0x68, 0x83, 0xd1, 0x16, 0x1b,
	0x9f, 0xb9, 0x15, 0xa0, 0x38, 0xab, 0x42, 0x96, 0x4a, 0x8d, 0x0c, 0xb2, 0x4c, 0xa3, 0x31, 0x4e,
	0x1e, 0x9f, 0xfe, 0x04, 0x56, 0x60, 0xb0, 0x9d, 0x4e, 0xca, 0x4c, 0x01, 0x03, 0x21, 0xa4, 0x05,
	0xcb, 0xa5, 0x30, 0xcc, 0x58, 0xb0, 0x65, 0x27, 0x9f, 0x54, 0x90, 0xf3, 0x0c, 0x2c, 0xb2, 0xee,
	0xe1, 0x06, 0xe7, 0x9f, 0x1e, 0x21, 0xcb, 0x18, 0xea, 0xdb, 0xa6, 0x53, 0xf0, 0x40, 0x0e, 0x33,
	0xc0, 0x42, 0x8a, 0x04, 0x45, 0xa6, 0x24, 0x17, 0x76, 0xe4, 0x4d, 0xbd, 0xd9, 0x20, 0x9c, 0x52,
	0xd7, 0x1d, 0x14, 0xa7, 0x55, 0x48, 0x77, 0xf1, 0x74, 0x21, 0xd3, 0x17, 0xb4, 0x37, 0xae, 0x65,
	0x7c, 0xe0, 0xc4, 0xfb, 0xd6, 0x0b, 0x2e, 0xc9, 0xbe, 0xc1, 0x4d, 0x81, 0xc2, 0x26, 0x02, 0x0a,
	0x1c, 0xf9, 0x53, 0x6f, 0xd6, 0x8f, 0xf6, 0xbe, 0xa2, 0xff, 0xda, 0x1f, 0x7a, 0xf1, 0xa0, 0x1d,
	0x3e, 0x41, 0x81, 0xc1, 0x82, 0x1c, 0x1b, 0x28, 0x54, 0xce, 0xc5, 0x26, 0xd1, 0x65, 0x8e, 0x49,
	0x01, 0x82, 0xaf, 0xd1, 0xd8, 0xd1, 0xbf, 0x26, 0x7d, 0xf2, 0x4b, 0xfa, 0x1d, 0x58, 0x58, 0xc8,
	0x52, 0xa7, 0x18, 0x1f, 0x75, 0x72, 0x5c, 0xe6, 0xf8, 0xd8, 0xaa, 0xd1, 0xf5, 0xdb, 0xeb, 0xfb,
	0x47, 0xcf, 0x1f, 0xfa, 0x64, 0xc6, 0xa5, 0x5b, 0xa0, 0xb4, 0xdc, 0xd6, 0xf4, 0xef, 0x5f, 0x88,
	0xfa, 0x4b, 0x0d, 0xf5, 0x7c, 0x77, 0x99, 0xb9, 0xb7, 0xea, 0x35, 0x27, 0xba, 0xfa, 0x0e, 0x00,
	0x00, 0xff, 0xff, 0x45, 0x2a, 0x17, 0x9c, 0xde, 0x01, 0x00, 0x00,
}
