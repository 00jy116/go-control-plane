// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/accesslog/v3alpha/file.proto

package envoy_config_accesslog_v3alpha

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/api/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FileAccessLog struct {
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Types that are valid to be assigned to AccessLogFormat:
	//	*FileAccessLog_Format
	//	*FileAccessLog_JsonFormat
	//	*FileAccessLog_TypedJsonFormat
	AccessLogFormat      isFileAccessLog_AccessLogFormat `protobuf_oneof:"access_log_format"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *FileAccessLog) Reset()         { *m = FileAccessLog{} }
func (m *FileAccessLog) String() string { return proto.CompactTextString(m) }
func (*FileAccessLog) ProtoMessage()    {}
func (*FileAccessLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d015b66e55289b5, []int{0}
}

func (m *FileAccessLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileAccessLog.Unmarshal(m, b)
}
func (m *FileAccessLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileAccessLog.Marshal(b, m, deterministic)
}
func (m *FileAccessLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileAccessLog.Merge(m, src)
}
func (m *FileAccessLog) XXX_Size() int {
	return xxx_messageInfo_FileAccessLog.Size(m)
}
func (m *FileAccessLog) XXX_DiscardUnknown() {
	xxx_messageInfo_FileAccessLog.DiscardUnknown(m)
}

var xxx_messageInfo_FileAccessLog proto.InternalMessageInfo

func (m *FileAccessLog) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type isFileAccessLog_AccessLogFormat interface {
	isFileAccessLog_AccessLogFormat()
}

type FileAccessLog_Format struct {
	Format string `protobuf:"bytes,2,opt,name=format,proto3,oneof"`
}

type FileAccessLog_JsonFormat struct {
	JsonFormat *_struct.Struct `protobuf:"bytes,3,opt,name=json_format,json=jsonFormat,proto3,oneof"`
}

type FileAccessLog_TypedJsonFormat struct {
	TypedJsonFormat *_struct.Struct `protobuf:"bytes,4,opt,name=typed_json_format,json=typedJsonFormat,proto3,oneof"`
}

func (*FileAccessLog_Format) isFileAccessLog_AccessLogFormat() {}

func (*FileAccessLog_JsonFormat) isFileAccessLog_AccessLogFormat() {}

func (*FileAccessLog_TypedJsonFormat) isFileAccessLog_AccessLogFormat() {}

func (m *FileAccessLog) GetAccessLogFormat() isFileAccessLog_AccessLogFormat {
	if m != nil {
		return m.AccessLogFormat
	}
	return nil
}

func (m *FileAccessLog) GetFormat() string {
	if x, ok := m.GetAccessLogFormat().(*FileAccessLog_Format); ok {
		return x.Format
	}
	return ""
}

func (m *FileAccessLog) GetJsonFormat() *_struct.Struct {
	if x, ok := m.GetAccessLogFormat().(*FileAccessLog_JsonFormat); ok {
		return x.JsonFormat
	}
	return nil
}

func (m *FileAccessLog) GetTypedJsonFormat() *_struct.Struct {
	if x, ok := m.GetAccessLogFormat().(*FileAccessLog_TypedJsonFormat); ok {
		return x.TypedJsonFormat
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FileAccessLog) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FileAccessLog_Format)(nil),
		(*FileAccessLog_JsonFormat)(nil),
		(*FileAccessLog_TypedJsonFormat)(nil),
	}
}

func init() {
	proto.RegisterType((*FileAccessLog)(nil), "envoy.config.accesslog.v3alpha.FileAccessLog")
}

func init() {
	proto.RegisterFile("envoy/config/accesslog/v3alpha/file.proto", fileDescriptor_4d015b66e55289b5)
}

var fileDescriptor_4d015b66e55289b5 = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x41, 0x4e, 0x32, 0x31,
	0x1c, 0xc5, 0x19, 0x3e, 0xc2, 0x17, 0x4a, 0x8c, 0x61, 0x5c, 0x40, 0xd0, 0x10, 0x62, 0x62, 0x84,
	0xc4, 0xb4, 0x09, 0xec, 0x70, 0xe5, 0x24, 0x12, 0x62, 0x5c, 0x10, 0x3c, 0x00, 0x29, 0x43, 0xa7,
	0xd4, 0xd4, 0xfe, 0x9b, 0xb6, 0x4c, 0xe4, 0x06, 0xae, 0x3c, 0x80, 0xf7, 0xf1, 0x52, 0xae, 0xcc,
	0xb4, 0x03, 0xd1, 0x85, 0xba, 0x6b, 0xfb, 0x7e, 0xef, 0xfd, 0x5f, 0x5b, 0x34, 0x64, 0x2a, 0x87,
	0x1d, 0x49, 0x41, 0x65, 0x82, 0x13, 0x9a, 0xa6, 0xcc, 0x5a, 0x09, 0x9c, 0xe4, 0x63, 0x2a, 0xf5,
	0x86, 0x92, 0x4c, 0x48, 0x86, 0xb5, 0x01, 0x07, 0x71, 0xcf, 0xa3, 0x38, 0xa0, 0xf8, 0x80, 0xe2,
	0x12, 0xed, 0x9e, 0x71, 0x00, 0x2e, 0x19, 0xf1, 0xf4, 0x6a, 0x9b, 0x11, 0xeb, 0xcc, 0x36, 0x75,
	0xc1, 0xdd, 0xbd, 0xd8, 0xae, 0x35, 0x25, 0x54, 0x0b, 0x42, 0x95, 0x02, 0x47, 0x9d, 0x00, 0x65,
	0x49, 0xce, 0x8c, 0x15, 0xa0, 0x84, 0xe2, 0x25, 0xd6, 0xce, 0xa9, 0x14, 0x6b, 0xea, 0x18, 0xd9,
	0x2f, 0x82, 0x70, 0xfe, 0x5a, 0x45, 0x47, 0x53, 0x21, 0xd9, 0x8d, 0x9f, 0x7b, 0x0f, 0x3c, 0x3e,
	0x45, 0x35, 0x4d, 0xdd, 0xa6, 0x13, 0xf5, 0xa3, 0x41, 0x23, 0xf9, 0xff, 0x91, 0xd4, 0x4c, 0xb5,
	0x1f, 0x2d, 0xfc, 0x61, 0xdc, 0x41, 0xf5, 0x0c, 0xcc, 0x13, 0x75, 0x9d, 0x6a, 0x21, 0xcf, 0x2a,
	0x8b, 0x72, 0x1f, 0x4f, 0x50, 0xf3, 0xd1, 0x82, 0x5a, 0x96, 0xf2, 0xbf, 0x7e, 0x34, 0x68, 0x8e,
	0xda, 0x38, 0x94, 0xc7, 0xfb, 0xf2, 0xf8, 0xc1, 0x97, 0x9f, 0x55, 0x16, 0xa8, 0xa0, 0xa7, 0xc1,
	0x7b, 0x8b, 0x5a, 0x6e, 0xa7, 0xd9, 0x7a, 0xf9, 0x35, 0xa1, 0xf6, 0x57, 0xc2, 0xb1, 0xf7, 0xdc,
	0x1d, 0x62, 0x26, 0xf8, 0xed, 0xfd, 0xa5, 0x37, 0x44, 0x97, 0x3f, 0x3d, 0xe8, 0x08, 0x7f, 0xbb,
	0x69, 0x72, 0x82, 0x5a, 0x41, 0x5d, 0x4a, 0xe0, 0xe5, 0xd8, 0xe4, 0x1a, 0x5d, 0x09, 0xc0, 0x3e,
	0x42, 0x1b, 0x78, 0xde, 0xe1, 0xdf, 0xbf, 0x27, 0x69, 0x14, 0x99, 0xf3, 0xa2, 0xdc, 0x3c, 0x5a,
	0xd5, 0x7d, 0xcb, 0xf1, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xee, 0x61, 0xdd, 0xcb, 0xff, 0x01,
	0x00, 0x00,
}
