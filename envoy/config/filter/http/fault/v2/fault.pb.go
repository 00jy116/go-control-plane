// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/http/fault/v2/fault.proto

package envoy_config_filter_http_fault_v2

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	route "github.com/envoyproxy/go-control-plane/envoy/api/v2/route"
	v2 "github.com/envoyproxy/go-control-plane/envoy/config/filter/fault/v2"
	_type "github.com/envoyproxy/go-control-plane/envoy/type"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FaultAbort struct {
	// Types that are valid to be assigned to ErrorType:
	//	*FaultAbort_HttpStatus
	ErrorType            isFaultAbort_ErrorType   `protobuf_oneof:"error_type"`
	Percentage           *_type.FractionalPercent `protobuf:"bytes,3,opt,name=percentage,proto3" json:"percentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FaultAbort) Reset()         { *m = FaultAbort{} }
func (m *FaultAbort) String() string { return proto.CompactTextString(m) }
func (*FaultAbort) ProtoMessage()    {}
func (*FaultAbort) Descriptor() ([]byte, []int) {
	return fileDescriptor_26070db6b6576d5c, []int{0}
}

func (m *FaultAbort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaultAbort.Unmarshal(m, b)
}
func (m *FaultAbort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaultAbort.Marshal(b, m, deterministic)
}
func (m *FaultAbort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaultAbort.Merge(m, src)
}
func (m *FaultAbort) XXX_Size() int {
	return xxx_messageInfo_FaultAbort.Size(m)
}
func (m *FaultAbort) XXX_DiscardUnknown() {
	xxx_messageInfo_FaultAbort.DiscardUnknown(m)
}

var xxx_messageInfo_FaultAbort proto.InternalMessageInfo

type isFaultAbort_ErrorType interface {
	isFaultAbort_ErrorType()
}

type FaultAbort_HttpStatus struct {
	HttpStatus uint32 `protobuf:"varint,2,opt,name=http_status,json=httpStatus,proto3,oneof"`
}

func (*FaultAbort_HttpStatus) isFaultAbort_ErrorType() {}

func (m *FaultAbort) GetErrorType() isFaultAbort_ErrorType {
	if m != nil {
		return m.ErrorType
	}
	return nil
}

func (m *FaultAbort) GetHttpStatus() uint32 {
	if x, ok := m.GetErrorType().(*FaultAbort_HttpStatus); ok {
		return x.HttpStatus
	}
	return 0
}

func (m *FaultAbort) GetPercentage() *_type.FractionalPercent {
	if m != nil {
		return m.Percentage
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FaultAbort) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FaultAbort_HttpStatus)(nil),
	}
}

type HTTPFault struct {
	Delay                           *v2.FaultDelay         `protobuf:"bytes,1,opt,name=delay,proto3" json:"delay,omitempty"`
	Abort                           *FaultAbort            `protobuf:"bytes,2,opt,name=abort,proto3" json:"abort,omitempty"`
	UpstreamCluster                 string                 `protobuf:"bytes,3,opt,name=upstream_cluster,json=upstreamCluster,proto3" json:"upstream_cluster,omitempty"`
	Headers                         []*route.HeaderMatcher `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty"`
	DownstreamNodes                 []string               `protobuf:"bytes,5,rep,name=downstream_nodes,json=downstreamNodes,proto3" json:"downstream_nodes,omitempty"`
	MaxActiveFaults                 *wrappers.UInt32Value  `protobuf:"bytes,6,opt,name=max_active_faults,json=maxActiveFaults,proto3" json:"max_active_faults,omitempty"`
	ResponseRateLimit               *v2.FaultRateLimit     `protobuf:"bytes,7,opt,name=response_rate_limit,json=responseRateLimit,proto3" json:"response_rate_limit,omitempty"`
	DelayPercentRuntime             string                 `protobuf:"bytes,8,opt,name=delay_percent_runtime,json=delayPercentRuntime,proto3" json:"delay_percent_runtime,omitempty"`
	AbortPercentRuntime             string                 `protobuf:"bytes,9,opt,name=abort_percent_runtime,json=abortPercentRuntime,proto3" json:"abort_percent_runtime,omitempty"`
	DelayDurationRuntime            string                 `protobuf:"bytes,10,opt,name=delay_duration_runtime,json=delayDurationRuntime,proto3" json:"delay_duration_runtime,omitempty"`
	AbortHttpStatusRuntime          string                 `protobuf:"bytes,11,opt,name=abort_http_status_runtime,json=abortHttpStatusRuntime,proto3" json:"abort_http_status_runtime,omitempty"`
	MaxActiveFaultsRuntime          string                 `protobuf:"bytes,12,opt,name=max_active_faults_runtime,json=maxActiveFaultsRuntime,proto3" json:"max_active_faults_runtime,omitempty"`
	ResponseRateLimitPercentRuntime string                 `protobuf:"bytes,13,opt,name=response_rate_limit_percent_runtime,json=responseRateLimitPercentRuntime,proto3" json:"response_rate_limit_percent_runtime,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}               `json:"-"`
	XXX_unrecognized                []byte                 `json:"-"`
	XXX_sizecache                   int32                  `json:"-"`
}

func (m *HTTPFault) Reset()         { *m = HTTPFault{} }
func (m *HTTPFault) String() string { return proto.CompactTextString(m) }
func (*HTTPFault) ProtoMessage()    {}
func (*HTTPFault) Descriptor() ([]byte, []int) {
	return fileDescriptor_26070db6b6576d5c, []int{1}
}

func (m *HTTPFault) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPFault.Unmarshal(m, b)
}
func (m *HTTPFault) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPFault.Marshal(b, m, deterministic)
}
func (m *HTTPFault) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPFault.Merge(m, src)
}
func (m *HTTPFault) XXX_Size() int {
	return xxx_messageInfo_HTTPFault.Size(m)
}
func (m *HTTPFault) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPFault.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPFault proto.InternalMessageInfo

func (m *HTTPFault) GetDelay() *v2.FaultDelay {
	if m != nil {
		return m.Delay
	}
	return nil
}

func (m *HTTPFault) GetAbort() *FaultAbort {
	if m != nil {
		return m.Abort
	}
	return nil
}

func (m *HTTPFault) GetUpstreamCluster() string {
	if m != nil {
		return m.UpstreamCluster
	}
	return ""
}

func (m *HTTPFault) GetHeaders() []*route.HeaderMatcher {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *HTTPFault) GetDownstreamNodes() []string {
	if m != nil {
		return m.DownstreamNodes
	}
	return nil
}

func (m *HTTPFault) GetMaxActiveFaults() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxActiveFaults
	}
	return nil
}

func (m *HTTPFault) GetResponseRateLimit() *v2.FaultRateLimit {
	if m != nil {
		return m.ResponseRateLimit
	}
	return nil
}

func (m *HTTPFault) GetDelayPercentRuntime() string {
	if m != nil {
		return m.DelayPercentRuntime
	}
	return ""
}

func (m *HTTPFault) GetAbortPercentRuntime() string {
	if m != nil {
		return m.AbortPercentRuntime
	}
	return ""
}

func (m *HTTPFault) GetDelayDurationRuntime() string {
	if m != nil {
		return m.DelayDurationRuntime
	}
	return ""
}

func (m *HTTPFault) GetAbortHttpStatusRuntime() string {
	if m != nil {
		return m.AbortHttpStatusRuntime
	}
	return ""
}

func (m *HTTPFault) GetMaxActiveFaultsRuntime() string {
	if m != nil {
		return m.MaxActiveFaultsRuntime
	}
	return ""
}

func (m *HTTPFault) GetResponseRateLimitPercentRuntime() string {
	if m != nil {
		return m.ResponseRateLimitPercentRuntime
	}
	return ""
}

func init() {
	proto.RegisterType((*FaultAbort)(nil), "envoy.config.filter.http.fault.v2.FaultAbort")
	proto.RegisterType((*HTTPFault)(nil), "envoy.config.filter.http.fault.v2.HTTPFault")
}

func init() {
	proto.RegisterFile("envoy/config/filter/http/fault/v2/fault.proto", fileDescriptor_26070db6b6576d5c)
}

var fileDescriptor_26070db6b6576d5c = []byte{
	// 673 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xcb, 0x6e, 0xd3, 0x4c,
	0x14, 0xc7, 0x3f, 0x37, 0x4d, 0xda, 0x4e, 0xbe, 0xaa, 0xad, 0x0b, 0xc5, 0x54, 0x50, 0xd2, 0xb2,
	0x09, 0x97, 0x8e, 0x25, 0x97, 0x0d, 0x42, 0x20, 0x35, 0xad, 0xaa, 0x80, 0x0a, 0x8a, 0x4c, 0x61,
	0x85, 0x64, 0x4d, 0xe3, 0x93, 0xc4, 0x92, 0xe3, 0x19, 0xcd, 0x8c, 0xd3, 0xe4, 0x29, 0xd8, 0xb0,
	0xe0, 0x25, 0x78, 0x0f, 0x1e, 0x81, 0xe7, 0x60, 0x85, 0x58, 0x20, 0x34, 0x67, 0xe2, 0x34, 0x6d,
	0x22, 0x95, 0x4d, 0xe4, 0x9c, 0xf3, 0xff, 0x9d, 0xbb, 0x4d, 0xf6, 0x21, 0x1b, 0xf0, 0x91, 0xdf,
	0xe6, 0x59, 0x27, 0xe9, 0xfa, 0x9d, 0x24, 0xd5, 0x20, 0xfd, 0x9e, 0xd6, 0xc2, 0xef, 0xb0, 0x3c,
	0xd5, 0xfe, 0x20, 0xb0, 0x0f, 0x54, 0x48, 0xae, 0xb9, 0xbb, 0x8b, 0x72, 0x6a, 0xe5, 0xd4, 0xca,
	0xa9, 0x91, 0x53, 0xab, 0x1a, 0x04, 0xdb, 0x3b, 0x36, 0x22, 0x13, 0x89, 0x81, 0x25, 0xcf, 0x35,
	0xd8, 0x5f, 0x1b, 0x62, 0xbb, 0x3e, 0x2f, 0xe3, 0xbc, 0x64, 0xdb, 0x9e, 0x55, 0xea, 0x91, 0x00,
	0x5f, 0x80, 0x6c, 0x43, 0x56, 0x78, 0x76, 0xba, 0x9c, 0x77, 0x53, 0xf0, 0xf1, 0xdf, 0x79, 0xde,
	0xf1, 0x2f, 0x24, 0x13, 0x02, 0xa4, 0x2a, 0xfc, 0x79, 0x2c, 0x98, 0xcf, 0xb2, 0x8c, 0x6b, 0xa6,
	0x13, 0x9e, 0x29, 0xbf, 0x9f, 0x74, 0x25, 0x9b, 0xd4, 0x70, 0x67, 0xc0, 0xd2, 0x24, 0x66, 0x1a,
	0xfc, 0xe2, 0xc1, 0x3a, 0xf6, 0xbe, 0x38, 0x84, 0x9c, 0x98, 0x12, 0x0e, 0xcf, 0xb9, 0xd4, 0x2e,
	0x25, 0x55, 0xd3, 0x5c, 0xa4, 0x34, 0xd3, 0xb9, 0xf2, 0x16, 0x6a, 0x4e, 0x7d, 0xb5, 0x51, 0xfd,
	0xdd, 0x58, 0x7e, 0x5c, 0x59, 0xff, 0xb1, 0x58, 0xff, 0xee, 0x34, 0xff, 0x0b, 0x89, 0x51, 0xbc,
	0x47, 0x81, 0xfb, 0x92, 0x90, 0x71, 0xa1, 0xac, 0x0b, 0x5e, 0xa9, 0xe6, 0xd4, 0xab, 0xc1, 0x7d,
	0x6a, 0x67, 0x66, 0xda, 0xa0, 0x27, 0x92, 0xb5, 0x4d, 0x41, 0x2c, 0x6d, 0x59, 0x5d, 0x38, 0x05,
	0x34, 0x36, 0x08, 0x01, 0x29, 0xb9, 0x8c, 0x8c, 0xd6, 0x2d, 0xfd, 0x6a, 0x38, 0x6f, 0x16, 0x97,
	0x9d, 0xf5, 0x85, 0xbd, 0x6f, 0x15, 0xb2, 0xd2, 0x3c, 0x3b, 0x6b, 0x61, 0x69, 0xee, 0x2b, 0x52,
	0x8e, 0x21, 0x65, 0x23, 0xcf, 0xc1, 0x04, 0x75, 0x3a, 0x6f, 0x29, 0xc5, 0x3e, 0x28, 0x32, 0xc7,
	0x46, 0x1f, 0x5a, 0xcc, 0x3d, 0x22, 0x65, 0x66, 0xda, 0xc3, 0x7e, 0xaa, 0xc1, 0x3e, 0xbd, 0x71,
	0xa9, 0xf4, 0x72, 0x26, 0xa1, 0x65, 0xdd, 0x47, 0x64, 0x3d, 0x17, 0x4a, 0x4b, 0x60, 0xfd, 0xa8,
	0x9d, 0xe6, 0x4a, 0x83, 0xc4, 0x86, 0x57, 0xc2, 0xb5, 0xc2, 0x7e, 0x64, 0xcd, 0xee, 0x0b, 0xb2,
	0xd4, 0x03, 0x16, 0x83, 0x54, 0xde, 0x62, 0xad, 0x54, 0xaf, 0x06, 0xbb, 0xe3, 0x8c, 0x4c, 0x24,
	0x26, 0xb8, 0xbd, 0x8e, 0x26, 0x4a, 0xde, 0x32, 0xdd, 0xee, 0x81, 0x0c, 0x0b, 0xc2, 0xe4, 0x89,
	0xf9, 0x45, 0x36, 0xce, 0x94, 0xf1, 0x18, 0x94, 0x57, 0xae, 0x95, 0x4c, 0x9e, 0x4b, 0xfb, 0x3b,
	0x63, 0x76, 0x9b, 0x64, 0xa3, 0xcf, 0x86, 0x91, 0x99, 0xf0, 0x00, 0x22, 0xac, 0x5d, 0x79, 0x15,
	0xec, 0xf1, 0x1e, 0xb5, 0x17, 0x43, 0x8b, 0x8b, 0xa1, 0x1f, 0x5e, 0x67, 0xfa, 0x20, 0xf8, 0xc8,
	0xd2, 0x1c, 0xc2, 0xb5, 0x3e, 0x1b, 0x1e, 0x22, 0x85, 0x7d, 0x2a, 0xf7, 0x13, 0xd9, 0x94, 0xa0,
	0x04, 0xcf, 0x14, 0x44, 0xe6, 0x6c, 0xa2, 0x34, 0xe9, 0x27, 0xda, 0x5b, 0xc2, 0x58, 0x4f, 0xff,
	0x61, 0xde, 0x21, 0xd3, 0x70, 0x6a, 0x98, 0x70, 0xa3, 0x08, 0x34, 0x31, 0xb9, 0x01, 0xb9, 0x8d,
	0x8b, 0x88, 0xc6, 0xab, 0x8f, 0x64, 0x9e, 0xe9, 0xa4, 0x0f, 0xde, 0x32, 0xce, 0x6f, 0x13, 0x9d,
	0xc5, 0x7d, 0x58, 0x97, 0x61, 0x70, 0xee, 0x33, 0xcc, 0x8a, 0x65, 0xd0, 0x79, 0x8d, 0x79, 0x46,
	0xb6, 0x6c, 0x9e, 0x38, 0x97, 0xf8, 0x1a, 0x4c, 0x20, 0x82, 0xd0, 0x2d, 0xf4, 0x1e, 0x8f, 0x9d,
	0x05, 0xf5, 0x9c, 0xdc, 0xb5, 0x99, 0xa6, 0x2e, 0x7f, 0x02, 0x56, 0x11, 0xdc, 0x42, 0x41, 0x73,
	0x72, 0xf7, 0x53, 0xe8, 0xcc, 0x02, 0x26, 0xe8, 0xff, 0x16, 0xbd, 0x36, 0xea, 0x02, 0x3d, 0x25,
	0x0f, 0xe7, 0x4c, 0x7c, 0xa6, 0xdb, 0x55, 0x0c, 0xf2, 0x60, 0x66, 0xa6, 0x57, 0x3b, 0x6f, 0xc8,
	0x9f, 0x5f, 0xff, 0x7c, 0x2e, 0xef, 0xbb, 0x4f, 0xec, 0xa6, 0x60, 0xa8, 0x21, 0x53, 0xe6, 0x3b,
	0x30, 0xde, 0x96, 0xba, 0x72, 0xde, 0x07, 0x2c, 0x15, 0x3d, 0x46, 0xfc, 0x84, 0xdb, 0xcd, 0x0a,
	0xc9, 0x87, 0xa3, 0x9b, 0x5f, 0x8a, 0x86, 0xfd, 0x52, 0xb4, 0xcc, 0x45, 0xb5, 0x9c, 0xf3, 0x0a,
	0x9e, 0xd6, 0xc1, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xa4, 0x23, 0x3c, 0x52, 0x05, 0x00,
	0x00,
}
