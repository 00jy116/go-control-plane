// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/service/health/v3alpha/hds.proto

package envoy_service_health_v3alpha

import (
	context "context"
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	v3alpha "github.com/envoyproxy/go-control-plane/envoy/config/core/v3alpha"
	v3alpha1 "github.com/envoyproxy/go-control-plane/envoy/config/endpoint/v3alpha"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Capability_Protocol int32

const (
	Capability_HTTP  Capability_Protocol = 0
	Capability_TCP   Capability_Protocol = 1
	Capability_REDIS Capability_Protocol = 2
)

var Capability_Protocol_name = map[int32]string{
	0: "HTTP",
	1: "TCP",
	2: "REDIS",
}

var Capability_Protocol_value = map[string]int32{
	"HTTP":  0,
	"TCP":   1,
	"REDIS": 2,
}

func (x Capability_Protocol) String() string {
	return proto.EnumName(Capability_Protocol_name, int32(x))
}

func (Capability_Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_115c4c31447d9b68, []int{0, 0}
}

type Capability struct {
	HealthCheckProtocols []Capability_Protocol `protobuf:"varint,1,rep,packed,name=health_check_protocols,json=healthCheckProtocols,proto3,enum=envoy.service.health.v3alpha.Capability_Protocol" json:"health_check_protocols,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Capability) Reset()         { *m = Capability{} }
func (m *Capability) String() string { return proto.CompactTextString(m) }
func (*Capability) ProtoMessage()    {}
func (*Capability) Descriptor() ([]byte, []int) {
	return fileDescriptor_115c4c31447d9b68, []int{0}
}

func (m *Capability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Capability.Unmarshal(m, b)
}
func (m *Capability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Capability.Marshal(b, m, deterministic)
}
func (m *Capability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Capability.Merge(m, src)
}
func (m *Capability) XXX_Size() int {
	return xxx_messageInfo_Capability.Size(m)
}
func (m *Capability) XXX_DiscardUnknown() {
	xxx_messageInfo_Capability.DiscardUnknown(m)
}

var xxx_messageInfo_Capability proto.InternalMessageInfo

func (m *Capability) GetHealthCheckProtocols() []Capability_Protocol {
	if m != nil {
		return m.HealthCheckProtocols
	}
	return nil
}

type HealthCheckRequest struct {
	Node                 *v3alpha.Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Capability           *Capability   `protobuf:"bytes,2,opt,name=capability,proto3" json:"capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *HealthCheckRequest) Reset()         { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()    {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_115c4c31447d9b68, []int{1}
}

func (m *HealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckRequest.Unmarshal(m, b)
}
func (m *HealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckRequest.Marshal(b, m, deterministic)
}
func (m *HealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckRequest.Merge(m, src)
}
func (m *HealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_HealthCheckRequest.Size(m)
}
func (m *HealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckRequest proto.InternalMessageInfo

func (m *HealthCheckRequest) GetNode() *v3alpha.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *HealthCheckRequest) GetCapability() *Capability {
	if m != nil {
		return m.Capability
	}
	return nil
}

type EndpointHealth struct {
	Endpoint             *v3alpha1.Endpoint   `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	HealthStatus         v3alpha.HealthStatus `protobuf:"varint,2,opt,name=health_status,json=healthStatus,proto3,enum=envoy.config.core.v3alpha.HealthStatus" json:"health_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EndpointHealth) Reset()         { *m = EndpointHealth{} }
func (m *EndpointHealth) String() string { return proto.CompactTextString(m) }
func (*EndpointHealth) ProtoMessage()    {}
func (*EndpointHealth) Descriptor() ([]byte, []int) {
	return fileDescriptor_115c4c31447d9b68, []int{2}
}

func (m *EndpointHealth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndpointHealth.Unmarshal(m, b)
}
func (m *EndpointHealth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndpointHealth.Marshal(b, m, deterministic)
}
func (m *EndpointHealth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndpointHealth.Merge(m, src)
}
func (m *EndpointHealth) XXX_Size() int {
	return xxx_messageInfo_EndpointHealth.Size(m)
}
func (m *EndpointHealth) XXX_DiscardUnknown() {
	xxx_messageInfo_EndpointHealth.DiscardUnknown(m)
}

var xxx_messageInfo_EndpointHealth proto.InternalMessageInfo

func (m *EndpointHealth) GetEndpoint() *v3alpha1.Endpoint {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *EndpointHealth) GetHealthStatus() v3alpha.HealthStatus {
	if m != nil {
		return m.HealthStatus
	}
	return v3alpha.HealthStatus_UNKNOWN
}

type EndpointHealthResponse struct {
	EndpointsHealth      []*EndpointHealth `protobuf:"bytes,1,rep,name=endpoints_health,json=endpointsHealth,proto3" json:"endpoints_health,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EndpointHealthResponse) Reset()         { *m = EndpointHealthResponse{} }
func (m *EndpointHealthResponse) String() string { return proto.CompactTextString(m) }
func (*EndpointHealthResponse) ProtoMessage()    {}
func (*EndpointHealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_115c4c31447d9b68, []int{3}
}

func (m *EndpointHealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndpointHealthResponse.Unmarshal(m, b)
}
func (m *EndpointHealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndpointHealthResponse.Marshal(b, m, deterministic)
}
func (m *EndpointHealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndpointHealthResponse.Merge(m, src)
}
func (m *EndpointHealthResponse) XXX_Size() int {
	return xxx_messageInfo_EndpointHealthResponse.Size(m)
}
func (m *EndpointHealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EndpointHealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EndpointHealthResponse proto.InternalMessageInfo

func (m *EndpointHealthResponse) GetEndpointsHealth() []*EndpointHealth {
	if m != nil {
		return m.EndpointsHealth
	}
	return nil
}

type HealthCheckRequestOrEndpointHealthResponse struct {
	// Types that are valid to be assigned to RequestType:
	//	*HealthCheckRequestOrEndpointHealthResponse_HealthCheckRequest
	//	*HealthCheckRequestOrEndpointHealthResponse_EndpointHealthResponse
	RequestType          isHealthCheckRequestOrEndpointHealthResponse_RequestType `protobuf_oneof:"request_type"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *HealthCheckRequestOrEndpointHealthResponse) Reset() {
	*m = HealthCheckRequestOrEndpointHealthResponse{}
}
func (m *HealthCheckRequestOrEndpointHealthResponse) String() string {
	return proto.CompactTextString(m)
}
func (*HealthCheckRequestOrEndpointHealthResponse) ProtoMessage() {}
func (*HealthCheckRequestOrEndpointHealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_115c4c31447d9b68, []int{4}
}

func (m *HealthCheckRequestOrEndpointHealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckRequestOrEndpointHealthResponse.Unmarshal(m, b)
}
func (m *HealthCheckRequestOrEndpointHealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckRequestOrEndpointHealthResponse.Marshal(b, m, deterministic)
}
func (m *HealthCheckRequestOrEndpointHealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckRequestOrEndpointHealthResponse.Merge(m, src)
}
func (m *HealthCheckRequestOrEndpointHealthResponse) XXX_Size() int {
	return xxx_messageInfo_HealthCheckRequestOrEndpointHealthResponse.Size(m)
}
func (m *HealthCheckRequestOrEndpointHealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckRequestOrEndpointHealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckRequestOrEndpointHealthResponse proto.InternalMessageInfo

type isHealthCheckRequestOrEndpointHealthResponse_RequestType interface {
	isHealthCheckRequestOrEndpointHealthResponse_RequestType()
}

type HealthCheckRequestOrEndpointHealthResponse_HealthCheckRequest struct {
	HealthCheckRequest *HealthCheckRequest `protobuf:"bytes,1,opt,name=health_check_request,json=healthCheckRequest,proto3,oneof"`
}

type HealthCheckRequestOrEndpointHealthResponse_EndpointHealthResponse struct {
	EndpointHealthResponse *EndpointHealthResponse `protobuf:"bytes,2,opt,name=endpoint_health_response,json=endpointHealthResponse,proto3,oneof"`
}

func (*HealthCheckRequestOrEndpointHealthResponse_HealthCheckRequest) isHealthCheckRequestOrEndpointHealthResponse_RequestType() {
}

func (*HealthCheckRequestOrEndpointHealthResponse_EndpointHealthResponse) isHealthCheckRequestOrEndpointHealthResponse_RequestType() {
}

func (m *HealthCheckRequestOrEndpointHealthResponse) GetRequestType() isHealthCheckRequestOrEndpointHealthResponse_RequestType {
	if m != nil {
		return m.RequestType
	}
	return nil
}

func (m *HealthCheckRequestOrEndpointHealthResponse) GetHealthCheckRequest() *HealthCheckRequest {
	if x, ok := m.GetRequestType().(*HealthCheckRequestOrEndpointHealthResponse_HealthCheckRequest); ok {
		return x.HealthCheckRequest
	}
	return nil
}

func (m *HealthCheckRequestOrEndpointHealthResponse) GetEndpointHealthResponse() *EndpointHealthResponse {
	if x, ok := m.GetRequestType().(*HealthCheckRequestOrEndpointHealthResponse_EndpointHealthResponse); ok {
		return x.EndpointHealthResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HealthCheckRequestOrEndpointHealthResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HealthCheckRequestOrEndpointHealthResponse_HealthCheckRequest)(nil),
		(*HealthCheckRequestOrEndpointHealthResponse_EndpointHealthResponse)(nil),
	}
}

type LocalityEndpoints struct {
	Locality             *v3alpha.Locality    `protobuf:"bytes,1,opt,name=locality,proto3" json:"locality,omitempty"`
	Endpoints            []*v3alpha1.Endpoint `protobuf:"bytes,2,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LocalityEndpoints) Reset()         { *m = LocalityEndpoints{} }
func (m *LocalityEndpoints) String() string { return proto.CompactTextString(m) }
func (*LocalityEndpoints) ProtoMessage()    {}
func (*LocalityEndpoints) Descriptor() ([]byte, []int) {
	return fileDescriptor_115c4c31447d9b68, []int{5}
}

func (m *LocalityEndpoints) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalityEndpoints.Unmarshal(m, b)
}
func (m *LocalityEndpoints) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalityEndpoints.Marshal(b, m, deterministic)
}
func (m *LocalityEndpoints) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalityEndpoints.Merge(m, src)
}
func (m *LocalityEndpoints) XXX_Size() int {
	return xxx_messageInfo_LocalityEndpoints.Size(m)
}
func (m *LocalityEndpoints) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalityEndpoints.DiscardUnknown(m)
}

var xxx_messageInfo_LocalityEndpoints proto.InternalMessageInfo

func (m *LocalityEndpoints) GetLocality() *v3alpha.Locality {
	if m != nil {
		return m.Locality
	}
	return nil
}

func (m *LocalityEndpoints) GetEndpoints() []*v3alpha1.Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

type ClusterHealthCheck struct {
	ClusterName          string                 `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	HealthChecks         []*v3alpha.HealthCheck `protobuf:"bytes,2,rep,name=health_checks,json=healthChecks,proto3" json:"health_checks,omitempty"`
	LocalityEndpoints    []*LocalityEndpoints   `protobuf:"bytes,3,rep,name=locality_endpoints,json=localityEndpoints,proto3" json:"locality_endpoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ClusterHealthCheck) Reset()         { *m = ClusterHealthCheck{} }
func (m *ClusterHealthCheck) String() string { return proto.CompactTextString(m) }
func (*ClusterHealthCheck) ProtoMessage()    {}
func (*ClusterHealthCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_115c4c31447d9b68, []int{6}
}

func (m *ClusterHealthCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterHealthCheck.Unmarshal(m, b)
}
func (m *ClusterHealthCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterHealthCheck.Marshal(b, m, deterministic)
}
func (m *ClusterHealthCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterHealthCheck.Merge(m, src)
}
func (m *ClusterHealthCheck) XXX_Size() int {
	return xxx_messageInfo_ClusterHealthCheck.Size(m)
}
func (m *ClusterHealthCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterHealthCheck.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterHealthCheck proto.InternalMessageInfo

func (m *ClusterHealthCheck) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *ClusterHealthCheck) GetHealthChecks() []*v3alpha.HealthCheck {
	if m != nil {
		return m.HealthChecks
	}
	return nil
}

func (m *ClusterHealthCheck) GetLocalityEndpoints() []*LocalityEndpoints {
	if m != nil {
		return m.LocalityEndpoints
	}
	return nil
}

type HealthCheckSpecifier struct {
	ClusterHealthChecks  []*ClusterHealthCheck `protobuf:"bytes,1,rep,name=cluster_health_checks,json=clusterHealthChecks,proto3" json:"cluster_health_checks,omitempty"`
	Interval             *duration.Duration    `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HealthCheckSpecifier) Reset()         { *m = HealthCheckSpecifier{} }
func (m *HealthCheckSpecifier) String() string { return proto.CompactTextString(m) }
func (*HealthCheckSpecifier) ProtoMessage()    {}
func (*HealthCheckSpecifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_115c4c31447d9b68, []int{7}
}

func (m *HealthCheckSpecifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckSpecifier.Unmarshal(m, b)
}
func (m *HealthCheckSpecifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckSpecifier.Marshal(b, m, deterministic)
}
func (m *HealthCheckSpecifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckSpecifier.Merge(m, src)
}
func (m *HealthCheckSpecifier) XXX_Size() int {
	return xxx_messageInfo_HealthCheckSpecifier.Size(m)
}
func (m *HealthCheckSpecifier) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckSpecifier.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckSpecifier proto.InternalMessageInfo

func (m *HealthCheckSpecifier) GetClusterHealthChecks() []*ClusterHealthCheck {
	if m != nil {
		return m.ClusterHealthChecks
	}
	return nil
}

func (m *HealthCheckSpecifier) GetInterval() *duration.Duration {
	if m != nil {
		return m.Interval
	}
	return nil
}

func init() {
	proto.RegisterEnum("envoy.service.health.v3alpha.Capability_Protocol", Capability_Protocol_name, Capability_Protocol_value)
	proto.RegisterType((*Capability)(nil), "envoy.service.health.v3alpha.Capability")
	proto.RegisterType((*HealthCheckRequest)(nil), "envoy.service.health.v3alpha.HealthCheckRequest")
	proto.RegisterType((*EndpointHealth)(nil), "envoy.service.health.v3alpha.EndpointHealth")
	proto.RegisterType((*EndpointHealthResponse)(nil), "envoy.service.health.v3alpha.EndpointHealthResponse")
	proto.RegisterType((*HealthCheckRequestOrEndpointHealthResponse)(nil), "envoy.service.health.v3alpha.HealthCheckRequestOrEndpointHealthResponse")
	proto.RegisterType((*LocalityEndpoints)(nil), "envoy.service.health.v3alpha.LocalityEndpoints")
	proto.RegisterType((*ClusterHealthCheck)(nil), "envoy.service.health.v3alpha.ClusterHealthCheck")
	proto.RegisterType((*HealthCheckSpecifier)(nil), "envoy.service.health.v3alpha.HealthCheckSpecifier")
}

func init() {
	proto.RegisterFile("envoy/service/health/v3alpha/hds.proto", fileDescriptor_115c4c31447d9b68)
}

var fileDescriptor_115c4c31447d9b68 = []byte{
	// 886 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x4d, 0x6f, 0xe3, 0x44,
	0x18, 0xee, 0xa4, 0x0b, 0xa4, 0x6f, 0x4b, 0x49, 0x87, 0x52, 0x85, 0x68, 0xb5, 0xbb, 0x35, 0xb0,
	0x1b, 0x4a, 0xb0, 0xd3, 0x64, 0x41, 0xc8, 0x1c, 0x90, 0x9a, 0x06, 0x82, 0xa8, 0x96, 0xc8, 0xa9,
	0xc4, 0x8d, 0x68, 0x62, 0x4f, 0x63, 0x0b, 0xd7, 0x63, 0x3c, 0x4e, 0x44, 0xae, 0x9c, 0xf6, 0xce,
	0x01, 0x69, 0xff, 0x02, 0xff, 0x02, 0x89, 0x03, 0x07, 0x24, 0x24, 0xc4, 0x1f, 0x40, 0xdc, 0xf8,
	0x01, 0x5c, 0x91, 0x3d, 0x33, 0x8e, 0x53, 0x6f, 0xbc, 0xe9, 0x8d, 0xa3, 0xdf, 0x79, 0xde, 0x8f,
	0xe7, 0x99, 0xe7, 0xb5, 0x0d, 0x0f, 0x69, 0x30, 0x67, 0x0b, 0x83, 0xd3, 0x68, 0xee, 0xd9, 0xd4,
	0x70, 0x29, 0xf1, 0x63, 0xd7, 0x98, 0x77, 0x89, 0x1f, 0xba, 0xc4, 0x70, 0x1d, 0xae, 0x87, 0x11,
	0x8b, 0x19, 0xbe, 0x9b, 0xe2, 0x74, 0x89, 0xd3, 0x05, 0x4e, 0x97, 0xb8, 0xc6, 0xdb, 0xa2, 0x8a,
	0xcd, 0x82, 0x2b, 0x6f, 0x6a, 0xd8, 0x2c, 0xa2, 0x59, 0x89, 0x09, 0xe1, 0x54, 0xd4, 0x68, 0xb4,
	0xd6, 0xa3, 0x44, 0xbd, 0xb1, 0xed, 0x52, 0xfb, 0x9b, 0xe7, 0xa2, 0x69, 0xe0, 0x84, 0xcc, 0x0b,
	0xe2, 0x2c, 0x43, 0x05, 0x24, 0xfa, 0xee, 0x94, 0xb1, 0xa9, 0x4f, 0x0d, 0x12, 0x7a, 0x06, 0x09,
	0x02, 0x16, 0x93, 0xd8, 0x63, 0x81, 0x9c, 0xbe, 0x71, 0x4f, 0x9e, 0xa6, 0x4f, 0x93, 0xd9, 0x95,
	0xe1, 0xcc, 0xa2, 0x14, 0x20, 0xcf, 0x8f, 0x67, 0x4e, 0x48, 0xf2, 0x79, 0xc6, 0x9c, 0x46, 0xdc,
	0x63, 0x81, 0x17, 0x4c, 0x05, 0x44, 0xfb, 0x0d, 0x01, 0xf4, 0x48, 0x48, 0x26, 0x9e, 0xef, 0xc5,
	0x0b, 0x3c, 0x85, 0xa3, 0xfc, 0xcc, 0xe3, 0x14, 0x64, 0x33, 0x9f, 0xd7, 0xd1, 0x83, 0xed, 0xe6,
	0x7e, 0xe7, 0x54, 0x2f, 0x13, 0x4c, 0x5f, 0x56, 0xd2, 0x87, 0x32, 0xd3, 0x3a, 0x14, 0x98, 0x5e,
	0x52, 0x4f, 0x05, 0xb9, 0xd6, 0x84, 0xaa, 0x7a, 0xc0, 0x55, 0xb8, 0x33, 0xb8, 0xbc, 0x1c, 0xd6,
	0xb6, 0xf0, 0x2b, 0xb0, 0x7d, 0xd9, 0x1b, 0xd6, 0x10, 0xde, 0x81, 0x97, 0xac, 0xfe, 0xf9, 0xe7,
	0xa3, 0x5a, 0xc5, 0x6c, 0x3d, 0xfb, 0xe5, 0xe9, 0xbd, 0x47, 0xf0, 0xce, 0x6a, 0x63, 0xc7, 0xe3,
	0x36, 0x9b, 0xd3, 0x68, 0xa1, 0xcf, 0x3b, 0xb9, 0xb6, 0xda, 0xaf, 0x08, 0xf0, 0x60, 0xd9, 0xd0,
	0xa2, 0xdf, 0xce, 0x28, 0x8f, 0x71, 0x17, 0xee, 0x04, 0xcc, 0xa1, 0x75, 0xf4, 0x00, 0x35, 0x77,
	0x3b, 0xf7, 0x25, 0x0b, 0x71, 0x09, 0x7a, 0x72, 0x65, 0x19, 0x85, 0x27, 0xcc, 0xa1, 0x56, 0x0a,
	0xc6, 0x03, 0x00, 0x3b, 0xab, 0x5c, 0xaf, 0xa4, 0xa9, 0xcd, 0x4d, 0x05, 0xb0, 0x72, 0xb9, 0xe6,
	0xe3, 0x84, 0x83, 0x01, 0xef, 0x97, 0x70, 0x28, 0x0e, 0xad, 0xfd, 0x89, 0x60, 0xbf, 0x2f, 0xfd,
	0x20, 0x8e, 0x71, 0x0f, 0xaa, 0xca, 0x21, 0x92, 0xcb, 0xa3, 0x55, 0x2e, 0x99, 0x7f, 0xd4, 0x44,
	0xaa, 0x80, 0x95, 0x25, 0xe2, 0x0b, 0x78, 0x55, 0x5e, 0x32, 0x8f, 0x49, 0x3c, 0xe3, 0x29, 0xb5,
	0xfd, 0x9b, 0x95, 0x56, 0x54, 0x11, 0xed, 0x47, 0x29, 0xdc, 0xda, 0x73, 0x73, 0x4f, 0x66, 0x3b,
	0xe1, 0xf6, 0x1e, 0xbc, 0x5b, 0xc2, 0x6d, 0x95, 0x84, 0xf6, 0x13, 0x82, 0xa3, 0xd5, 0x90, 0x45,
	0x79, 0xc8, 0x02, 0x4e, 0xf1, 0x57, 0x50, 0x53, 0x63, 0xf2, 0xb1, 0x68, 0x93, 0x3a, 0x6f, 0xb7,
	0xd3, 0x2a, 0x17, 0xfe, 0x46, 0xbd, 0xd7, 0xb2, 0x2a, 0x22, 0x60, 0x7e, 0x94, 0x4c, 0xd9, 0x85,
	0xd3, 0x8d, 0xa7, 0x54, 0x23, 0x69, 0x7f, 0x55, 0xe0, 0xa4, 0x78, 0x39, 0x5f, 0x46, 0x6b, 0x18,
	0x38, 0x70, 0xb8, 0xb2, 0x41, 0x91, 0xc0, 0xcb, 0xdb, 0x6a, 0x97, 0xb3, 0x28, 0xf6, 0x19, 0x6c,
	0x59, 0xd8, 0x2d, 0xfa, 0x39, 0x84, 0xba, 0x62, 0x28, 0x65, 0x1a, 0x47, 0x72, 0x02, 0x69, 0xd4,
	0xc7, 0xb7, 0xd2, 0x4b, 0xe6, 0x0e, 0xb6, 0xac, 0x23, 0xfa, 0xdc, 0x13, 0xf3, 0x22, 0x11, 0xf0,
	0x33, 0xe8, 0xdf, 0xca, 0xc2, 0xeb, 0x54, 0x3a, 0xdb, 0x87, 0x3d, 0x29, 0xcc, 0x38, 0x5e, 0x84,
	0x54, 0xfb, 0x1d, 0xc1, 0xc1, 0x05, 0xb3, 0x49, 0xb2, 0x2d, 0x2a, 0x85, 0xe3, 0x4f, 0xa0, 0xea,
	0xcb, 0xa0, 0xd4, 0xef, 0xad, 0x12, 0x8f, 0xaa, 0x7c, 0x2b, 0x4b, 0xc2, 0x7d, 0xd8, 0xc9, 0x8c,
	0x50, 0xaf, 0xa4, 0x3e, 0xda, 0x78, 0x5f, 0x96, 0x99, 0x66, 0x37, 0xe1, 0xae, 0x43, 0xab, 0x84,
	0x7b, 0x61, 0x78, 0xed, 0x59, 0x05, 0x70, 0xcf, 0x9f, 0xf1, 0x98, 0x46, 0x39, 0x61, 0xf0, 0x31,
	0xec, 0xd9, 0x22, 0x3a, 0x0e, 0xc8, 0xb5, 0x78, 0x23, 0xed, 0x58, 0xbb, 0x32, 0xf6, 0x84, 0x5c,
	0x53, 0xfc, 0x45, 0xb6, 0x9f, 0xa9, 0x85, 0xd4, 0xe4, 0x0f, 0x5f, 0xb8, 0x9f, 0x42, 0xfa, 0xbd,
	0x9c, 0x5f, 0x38, 0xfe, 0x1a, 0xb0, 0x92, 0x63, 0xbc, 0xd4, 0x62, 0x3b, 0xad, 0x68, 0x94, 0x7b,
	0xa4, 0xc0, 0xc9, 0x3a, 0xf0, 0x6f, 0x86, 0x36, 0x79, 0xb5, 0x15, 0x55, 0xd0, 0xfe, 0x41, 0x70,
	0x98, 0x7b, 0x1e, 0x85, 0xd4, 0xf6, 0xae, 0x3c, 0x1a, 0x61, 0x07, 0xde, 0x50, 0xf2, 0xac, 0x6a,
	0x20, 0xde, 0x02, 0x2f, 0xd8, 0x9f, 0x62, 0x27, 0xeb, 0x75, 0xbb, 0x10, 0xe3, 0xf8, 0x03, 0xa8,
	0x7a, 0x41, 0x4c, 0xa3, 0x39, 0xf1, 0xe5, 0xba, 0xbc, 0xa9, 0x8b, 0x6f, 0xa9, 0xae, 0xbe, 0xa5,
	0xfa, 0xb9, 0xfc, 0x96, 0x5a, 0x19, 0xd4, 0xfc, 0x30, 0xe1, 0x7a, 0x0a, 0xc6, 0x66, 0x3b, 0x90,
	0x91, 0xea, 0xfc, 0x5b, 0x81, 0x23, 0x71, 0x70, 0xae, 0xb0, 0x23, 0x91, 0x8c, 0x7f, 0x44, 0x70,
	0x30, 0x8a, 0x23, 0x4a, 0xae, 0xf3, 0x26, 0x19, 0xdc, 0xf6, 0x35, 0xb1, 0x6e, 0xd1, 0x1a, 0x9d,
	0x8d, 0x2b, 0x65, 0xe3, 0x6a, 0x5b, 0x4d, 0xd4, 0x46, 0xf8, 0x67, 0x04, 0xb5, 0x4f, 0x69, 0x6c,
	0xbb, 0xff, 0x9f, 0xc1, 0xda, 0xdf, 0xff, 0xf1, 0xf7, 0x0f, 0x95, 0x63, 0xed, 0x7e, 0xf6, 0xbb,
	0x94, 0x69, 0x6f, 0xe6, 0xdd, 0x92, 0xc2, 0xb6, 0x4d, 0x74, 0x72, 0xf6, 0x31, 0x9c, 0x78, 0x4c,
	0x74, 0x0a, 0x23, 0xf6, 0xdd, 0xa2, 0xb4, 0xe9, 0x59, 0x75, 0xe0, 0xf0, 0xf4, 0xaf, 0x64, 0x88,
	0x9e, 0x22, 0x34, 0x79, 0x39, 0xf5, 0x42, 0xf7, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb2, 0xd8,
	0xb5, 0xb6, 0x4d, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HealthDiscoveryServiceClient is the client API for HealthDiscoveryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HealthDiscoveryServiceClient interface {
	StreamHealthCheck(ctx context.Context, opts ...grpc.CallOption) (HealthDiscoveryService_StreamHealthCheckClient, error)
	FetchHealthCheck(ctx context.Context, in *HealthCheckRequestOrEndpointHealthResponse, opts ...grpc.CallOption) (*HealthCheckSpecifier, error)
}

type healthDiscoveryServiceClient struct {
	cc *grpc.ClientConn
}

func NewHealthDiscoveryServiceClient(cc *grpc.ClientConn) HealthDiscoveryServiceClient {
	return &healthDiscoveryServiceClient{cc}
}

func (c *healthDiscoveryServiceClient) StreamHealthCheck(ctx context.Context, opts ...grpc.CallOption) (HealthDiscoveryService_StreamHealthCheckClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HealthDiscoveryService_serviceDesc.Streams[0], "/envoy.service.health.v3alpha.HealthDiscoveryService/StreamHealthCheck", opts...)
	if err != nil {
		return nil, err
	}
	x := &healthDiscoveryServiceStreamHealthCheckClient{stream}
	return x, nil
}

type HealthDiscoveryService_StreamHealthCheckClient interface {
	Send(*HealthCheckRequestOrEndpointHealthResponse) error
	Recv() (*HealthCheckSpecifier, error)
	grpc.ClientStream
}

type healthDiscoveryServiceStreamHealthCheckClient struct {
	grpc.ClientStream
}

func (x *healthDiscoveryServiceStreamHealthCheckClient) Send(m *HealthCheckRequestOrEndpointHealthResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *healthDiscoveryServiceStreamHealthCheckClient) Recv() (*HealthCheckSpecifier, error) {
	m := new(HealthCheckSpecifier)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *healthDiscoveryServiceClient) FetchHealthCheck(ctx context.Context, in *HealthCheckRequestOrEndpointHealthResponse, opts ...grpc.CallOption) (*HealthCheckSpecifier, error) {
	out := new(HealthCheckSpecifier)
	err := c.cc.Invoke(ctx, "/envoy.service.health.v3alpha.HealthDiscoveryService/FetchHealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HealthDiscoveryServiceServer is the server API for HealthDiscoveryService service.
type HealthDiscoveryServiceServer interface {
	StreamHealthCheck(HealthDiscoveryService_StreamHealthCheckServer) error
	FetchHealthCheck(context.Context, *HealthCheckRequestOrEndpointHealthResponse) (*HealthCheckSpecifier, error)
}

// UnimplementedHealthDiscoveryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHealthDiscoveryServiceServer struct {
}

func (*UnimplementedHealthDiscoveryServiceServer) StreamHealthCheck(srv HealthDiscoveryService_StreamHealthCheckServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamHealthCheck not implemented")
}
func (*UnimplementedHealthDiscoveryServiceServer) FetchHealthCheck(ctx context.Context, req *HealthCheckRequestOrEndpointHealthResponse) (*HealthCheckSpecifier, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchHealthCheck not implemented")
}

func RegisterHealthDiscoveryServiceServer(s *grpc.Server, srv HealthDiscoveryServiceServer) {
	s.RegisterService(&_HealthDiscoveryService_serviceDesc, srv)
}

func _HealthDiscoveryService_StreamHealthCheck_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HealthDiscoveryServiceServer).StreamHealthCheck(&healthDiscoveryServiceStreamHealthCheckServer{stream})
}

type HealthDiscoveryService_StreamHealthCheckServer interface {
	Send(*HealthCheckSpecifier) error
	Recv() (*HealthCheckRequestOrEndpointHealthResponse, error)
	grpc.ServerStream
}

type healthDiscoveryServiceStreamHealthCheckServer struct {
	grpc.ServerStream
}

func (x *healthDiscoveryServiceStreamHealthCheckServer) Send(m *HealthCheckSpecifier) error {
	return x.ServerStream.SendMsg(m)
}

func (x *healthDiscoveryServiceStreamHealthCheckServer) Recv() (*HealthCheckRequestOrEndpointHealthResponse, error) {
	m := new(HealthCheckRequestOrEndpointHealthResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _HealthDiscoveryService_FetchHealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequestOrEndpointHealthResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthDiscoveryServiceServer).FetchHealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/envoy.service.health.v3alpha.HealthDiscoveryService/FetchHealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthDiscoveryServiceServer).FetchHealthCheck(ctx, req.(*HealthCheckRequestOrEndpointHealthResponse))
	}
	return interceptor(ctx, in, info, handler)
}

var _HealthDiscoveryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "envoy.service.health.v3alpha.HealthDiscoveryService",
	HandlerType: (*HealthDiscoveryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchHealthCheck",
			Handler:    _HealthDiscoveryService_FetchHealthCheck_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamHealthCheck",
			Handler:       _HealthDiscoveryService_StreamHealthCheck_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "envoy/service/health/v3alpha/hds.proto",
}
