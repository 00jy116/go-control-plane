// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/extensions/wasm/v3/wasm.proto

package envoy_extensions_wasm_v3

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VmConfig struct {
	VmId                 string              `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	Runtime              string              `protobuf:"bytes,2,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Code                 *v3.AsyncDataSource `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Configuration        *any.Any            `protobuf:"bytes,4,opt,name=configuration,proto3" json:"configuration,omitempty"`
	AllowPrecompiled     bool                `protobuf:"varint,5,opt,name=allow_precompiled,json=allowPrecompiled,proto3" json:"allow_precompiled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *VmConfig) Reset()         { *m = VmConfig{} }
func (m *VmConfig) String() string { return proto.CompactTextString(m) }
func (*VmConfig) ProtoMessage()    {}
func (*VmConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb6accf9c32c7c2b, []int{0}
}

func (m *VmConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VmConfig.Unmarshal(m, b)
}
func (m *VmConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VmConfig.Marshal(b, m, deterministic)
}
func (m *VmConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VmConfig.Merge(m, src)
}
func (m *VmConfig) XXX_Size() int {
	return xxx_messageInfo_VmConfig.Size(m)
}
func (m *VmConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_VmConfig.DiscardUnknown(m)
}

var xxx_messageInfo_VmConfig proto.InternalMessageInfo

func (m *VmConfig) GetVmId() string {
	if m != nil {
		return m.VmId
	}
	return ""
}

func (m *VmConfig) GetRuntime() string {
	if m != nil {
		return m.Runtime
	}
	return ""
}

func (m *VmConfig) GetCode() *v3.AsyncDataSource {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *VmConfig) GetConfiguration() *any.Any {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *VmConfig) GetAllowPrecompiled() bool {
	if m != nil {
		return m.AllowPrecompiled
	}
	return false
}

type PluginConfig struct {
	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GroupName string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	// Types that are valid to be assigned to VmConfig:
	//	*PluginConfig_InlineVmConfig
	VmConfig             isPluginConfig_VmConfig `protobuf_oneof:"vm_config"`
	Configuration        *any.Any                `protobuf:"bytes,5,opt,name=configuration,proto3" json:"configuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PluginConfig) Reset()         { *m = PluginConfig{} }
func (m *PluginConfig) String() string { return proto.CompactTextString(m) }
func (*PluginConfig) ProtoMessage()    {}
func (*PluginConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb6accf9c32c7c2b, []int{1}
}

func (m *PluginConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PluginConfig.Unmarshal(m, b)
}
func (m *PluginConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PluginConfig.Marshal(b, m, deterministic)
}
func (m *PluginConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginConfig.Merge(m, src)
}
func (m *PluginConfig) XXX_Size() int {
	return xxx_messageInfo_PluginConfig.Size(m)
}
func (m *PluginConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PluginConfig proto.InternalMessageInfo

func (m *PluginConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PluginConfig) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

type isPluginConfig_VmConfig interface {
	isPluginConfig_VmConfig()
}

type PluginConfig_InlineVmConfig struct {
	InlineVmConfig *VmConfig `protobuf:"bytes,3,opt,name=inline_vm_config,json=inlineVmConfig,proto3,oneof"`
}

func (*PluginConfig_InlineVmConfig) isPluginConfig_VmConfig() {}

func (m *PluginConfig) GetVmConfig() isPluginConfig_VmConfig {
	if m != nil {
		return m.VmConfig
	}
	return nil
}

func (m *PluginConfig) GetInlineVmConfig() *VmConfig {
	if x, ok := m.GetVmConfig().(*PluginConfig_InlineVmConfig); ok {
		return x.InlineVmConfig
	}
	return nil
}

func (m *PluginConfig) GetConfiguration() *any.Any {
	if m != nil {
		return m.Configuration
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PluginConfig) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PluginConfig_InlineVmConfig)(nil),
	}
}

type WasmService struct {
	Config               *PluginConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Singleton            bool          `protobuf:"varint,2,opt,name=singleton,proto3" json:"singleton,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *WasmService) Reset()         { *m = WasmService{} }
func (m *WasmService) String() string { return proto.CompactTextString(m) }
func (*WasmService) ProtoMessage()    {}
func (*WasmService) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb6accf9c32c7c2b, []int{2}
}

func (m *WasmService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WasmService.Unmarshal(m, b)
}
func (m *WasmService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WasmService.Marshal(b, m, deterministic)
}
func (m *WasmService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WasmService.Merge(m, src)
}
func (m *WasmService) XXX_Size() int {
	return xxx_messageInfo_WasmService.Size(m)
}
func (m *WasmService) XXX_DiscardUnknown() {
	xxx_messageInfo_WasmService.DiscardUnknown(m)
}

var xxx_messageInfo_WasmService proto.InternalMessageInfo

func (m *WasmService) GetConfig() *PluginConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *WasmService) GetSingleton() bool {
	if m != nil {
		return m.Singleton
	}
	return false
}

func init() {
	proto.RegisterType((*VmConfig)(nil), "envoy.extensions.wasm.v3.VmConfig")
	proto.RegisterType((*PluginConfig)(nil), "envoy.extensions.wasm.v3.PluginConfig")
	proto.RegisterType((*WasmService)(nil), "envoy.extensions.wasm.v3.WasmService")
}

func init() {
	proto.RegisterFile("envoy/extensions/wasm/v3/wasm.proto", fileDescriptor_fb6accf9c32c7c2b)
}

var fileDescriptor_fb6accf9c32c7c2b = []byte{
	// 525 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x49, 0xd7, 0x76, 0xed, 0x5b, 0x40, 0xc5, 0x20, 0x11, 0x26, 0x06, 0x5d, 0x61, 0xa5,
	0x08, 0x70, 0xa4, 0xf5, 0x44, 0x25, 0x90, 0x56, 0x38, 0xc0, 0x65, 0xaa, 0x32, 0x09, 0x8e, 0x95,
	0x9b, 0x78, 0xc1, 0x52, 0x62, 0x47, 0x8e, 0xe3, 0xad, 0x37, 0x8e, 0x70, 0xe4, 0x08, 0x1f, 0x85,
	0x3b, 0x12, 0x57, 0xbe, 0x0e, 0x27, 0x64, 0x3b, 0xfd, 0x33, 0x4d, 0x95, 0x38, 0x35, 0x7d, 0x9f,
	0xf7, 0x89, 0x9f, 0xe7, 0xe7, 0xc0, 0x23, 0xca, 0xb5, 0x58, 0x04, 0xf4, 0x42, 0x51, 0x5e, 0x30,
	0xc1, 0x8b, 0xe0, 0x9c, 0x14, 0x59, 0xa0, 0x47, 0xf6, 0x17, 0xe7, 0x52, 0x28, 0x81, 0x7c, 0xbb,
	0x84, 0xd7, 0x4b, 0xd8, 0x8a, 0x7a, 0xb4, 0xf7, 0xd0, 0xd9, 0x23, 0xc1, 0xcf, 0x58, 0x12, 0x44,
	0x42, 0x52, 0x63, 0x9d, 0x93, 0x82, 0x3a, 0xeb, 0xde, 0xbd, 0x44, 0x88, 0x24, 0xa5, 0x81, 0xfd,
	0x37, 0x2f, 0xcf, 0x02, 0xc2, 0x17, 0x95, 0xb4, 0x5f, 0xc6, 0x39, 0x09, 0x08, 0xe7, 0x42, 0x11,
	0x65, 0x8f, 0x2e, 0x14, 0x51, 0x65, 0x51, 0xc9, 0x07, 0x57, 0x64, 0x4d, 0xa5, 0x39, 0x9d, 0xf1,
	0xa4, 0x5a, 0xb9, 0xab, 0x49, 0xca, 0x62, 0xa2, 0x68, 0xb0, 0x7c, 0x70, 0x42, 0xff, 0x5b, 0x0d,
	0x5a, 0x1f, 0xb2, 0x37, 0x36, 0x15, 0xba, 0x0d, 0x0d, 0x9d, 0xcd, 0x58, 0xec, 0x7b, 0x3d, 0x6f,
	0xd8, 0x0e, 0xeb, 0x3a, 0x7b, 0x1f, 0xa3, 0x03, 0xd8, 0x95, 0x25, 0x57, 0x2c, 0xa3, 0x7e, 0xcd,
	0x8c, 0x27, 0xbb, 0x7f, 0x27, 0x75, 0x59, 0xeb, 0x79, 0xe1, 0x72, 0x8e, 0x5e, 0x42, 0x3d, 0x12,
	0x31, 0xf5, 0x77, 0x7a, 0xde, 0xb0, 0x73, 0x74, 0x88, 0x1d, 0x04, 0x57, 0x15, 0x9b, 0xaa, 0x58,
	0x8f, 0xf0, 0x71, 0xb1, 0xe0, 0xd1, 0x5b, 0xa2, 0xc8, 0xa9, 0x28, 0x65, 0x44, 0x43, 0x6b, 0x41,
	0x63, 0xb8, 0xe1, 0xf6, 0x4a, 0x69, 0xb3, 0xfb, 0x75, 0xfb, 0x8e, 0x3b, 0xd8, 0xd1, 0xc0, 0x4b,
	0x1a, 0xf8, 0x98, 0x2f, 0xc2, 0xcb, 0xab, 0xe8, 0x19, 0xdc, 0x22, 0x69, 0x2a, 0xce, 0x67, 0xb9,
	0xa4, 0x91, 0xc8, 0x72, 0x96, 0xd2, 0xd8, 0x6f, 0xf4, 0xbc, 0x61, 0x2b, 0xec, 0x5a, 0x61, 0xba,
	0x9e, 0x8f, 0x9f, 0xfe, 0xf8, 0xf5, 0xe5, 0xc1, 0x63, 0xe8, 0x5f, 0xca, 0xe6, 0x2e, 0xe7, 0x88,
	0xa4, 0xf9, 0x27, 0x82, 0x97, 0x18, 0xfa, 0x5f, 0x6b, 0x70, 0x7d, 0x9a, 0x96, 0x09, 0xe3, 0x15,
	0x17, 0x04, 0x75, 0x4e, 0x32, 0xba, 0xc4, 0x62, 0x9e, 0xd1, 0x3e, 0x40, 0x22, 0x45, 0x99, 0xcf,
	0xac, 0x62, 0xc9, 0x84, 0x6d, 0x3b, 0x39, 0x31, 0xf2, 0x09, 0x74, 0x19, 0x4f, 0x19, 0xa7, 0x33,
	0x9d, 0xcd, 0xdc, 0x69, 0x15, 0x9e, 0x3e, 0xde, 0xf6, 0x8d, 0xac, 0x12, 0xbc, 0xbb, 0x16, 0xde,
	0x74, 0xee, 0xd5, 0xd5, 0x5c, 0xe1, 0xd4, 0xf8, 0x6f, 0x4e, 0xe3, 0x17, 0xa6, 0xfa, 0x10, 0x06,
	0xdb, 0xab, 0x6f, 0xb6, 0x9d, 0x74, 0xa0, 0xbd, 0xca, 0xdc, 0xff, 0xee, 0x41, 0xe7, 0x23, 0x29,
	0xb2, 0x53, 0x2a, 0x35, 0x8b, 0x28, 0x7a, 0x0d, 0xcd, 0xaa, 0x8d, 0x67, 0x03, 0x0c, 0xb6, 0xb7,
	0xd9, 0x7c, 0x69, 0x58, 0xb9, 0xd0, 0x7d, 0x68, 0x17, 0x8c, 0x27, 0x29, 0x55, 0x82, 0x5b, 0x6a,
	0xad, 0x70, 0x3d, 0x18, 0x3f, 0x37, 0x49, 0x9f, 0xc0, 0xe1, 0xf6, 0xa4, 0x1b, 0x59, 0x26, 0xaf,
	0x7e, 0x7e, 0xfe, 0xfd, 0xa7, 0x59, 0xeb, 0xee, 0xc0, 0x80, 0x09, 0x97, 0x23, 0x97, 0xe2, 0x62,
	0xb1, 0x35, 0xd2, 0xa4, 0x6d, 0xec, 0x53, 0x83, 0x6a, 0xea, 0xcd, 0x9b, 0x96, 0xd9, 0xe8, 0x5f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x05, 0x5a, 0xe4, 0xf8, 0xd9, 0x03, 0x00, 0x00,
}
