// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/extensions/common/tap/v3/common.proto

package envoy_extensions_common_tap_v3

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	v31 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/tap/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommonExtensionConfig struct {
	// Types that are valid to be assigned to ConfigType:
	//	*CommonExtensionConfig_AdminConfig
	//	*CommonExtensionConfig_StaticConfig
	//	*CommonExtensionConfig_TapdsConfig
	ConfigType           isCommonExtensionConfig_ConfigType `protobuf_oneof:"config_type"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *CommonExtensionConfig) Reset()         { *m = CommonExtensionConfig{} }
func (m *CommonExtensionConfig) String() string { return proto.CompactTextString(m) }
func (*CommonExtensionConfig) ProtoMessage()    {}
func (*CommonExtensionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_d29738d4c8661d41, []int{0}
}

func (m *CommonExtensionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonExtensionConfig.Unmarshal(m, b)
}
func (m *CommonExtensionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonExtensionConfig.Marshal(b, m, deterministic)
}
func (m *CommonExtensionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonExtensionConfig.Merge(m, src)
}
func (m *CommonExtensionConfig) XXX_Size() int {
	return xxx_messageInfo_CommonExtensionConfig.Size(m)
}
func (m *CommonExtensionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonExtensionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CommonExtensionConfig proto.InternalMessageInfo

type isCommonExtensionConfig_ConfigType interface {
	isCommonExtensionConfig_ConfigType()
}

type CommonExtensionConfig_AdminConfig struct {
	AdminConfig *AdminConfig `protobuf:"bytes,1,opt,name=admin_config,json=adminConfig,proto3,oneof"`
}

type CommonExtensionConfig_StaticConfig struct {
	StaticConfig *v3.TapConfig `protobuf:"bytes,2,opt,name=static_config,json=staticConfig,proto3,oneof"`
}

type CommonExtensionConfig_TapdsConfig struct {
	TapdsConfig *CommonExtensionConfig_TapDSConfig `protobuf:"bytes,3,opt,name=tapds_config,json=tapdsConfig,proto3,oneof"`
}

func (*CommonExtensionConfig_AdminConfig) isCommonExtensionConfig_ConfigType() {}

func (*CommonExtensionConfig_StaticConfig) isCommonExtensionConfig_ConfigType() {}

func (*CommonExtensionConfig_TapdsConfig) isCommonExtensionConfig_ConfigType() {}

func (m *CommonExtensionConfig) GetConfigType() isCommonExtensionConfig_ConfigType {
	if m != nil {
		return m.ConfigType
	}
	return nil
}

func (m *CommonExtensionConfig) GetAdminConfig() *AdminConfig {
	if x, ok := m.GetConfigType().(*CommonExtensionConfig_AdminConfig); ok {
		return x.AdminConfig
	}
	return nil
}

func (m *CommonExtensionConfig) GetStaticConfig() *v3.TapConfig {
	if x, ok := m.GetConfigType().(*CommonExtensionConfig_StaticConfig); ok {
		return x.StaticConfig
	}
	return nil
}

func (m *CommonExtensionConfig) GetTapdsConfig() *CommonExtensionConfig_TapDSConfig {
	if x, ok := m.GetConfigType().(*CommonExtensionConfig_TapdsConfig); ok {
		return x.TapdsConfig
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CommonExtensionConfig) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CommonExtensionConfig_AdminConfig)(nil),
		(*CommonExtensionConfig_StaticConfig)(nil),
		(*CommonExtensionConfig_TapdsConfig)(nil),
	}
}

type CommonExtensionConfig_TapDSConfig struct {
	ConfigSource         *v31.ConfigSource `protobuf:"bytes,1,opt,name=config_source,json=configSource,proto3" json:"config_source,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CommonExtensionConfig_TapDSConfig) Reset()         { *m = CommonExtensionConfig_TapDSConfig{} }
func (m *CommonExtensionConfig_TapDSConfig) String() string { return proto.CompactTextString(m) }
func (*CommonExtensionConfig_TapDSConfig) ProtoMessage()    {}
func (*CommonExtensionConfig_TapDSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_d29738d4c8661d41, []int{0, 0}
}

func (m *CommonExtensionConfig_TapDSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonExtensionConfig_TapDSConfig.Unmarshal(m, b)
}
func (m *CommonExtensionConfig_TapDSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonExtensionConfig_TapDSConfig.Marshal(b, m, deterministic)
}
func (m *CommonExtensionConfig_TapDSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonExtensionConfig_TapDSConfig.Merge(m, src)
}
func (m *CommonExtensionConfig_TapDSConfig) XXX_Size() int {
	return xxx_messageInfo_CommonExtensionConfig_TapDSConfig.Size(m)
}
func (m *CommonExtensionConfig_TapDSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonExtensionConfig_TapDSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CommonExtensionConfig_TapDSConfig proto.InternalMessageInfo

func (m *CommonExtensionConfig_TapDSConfig) GetConfigSource() *v31.ConfigSource {
	if m != nil {
		return m.ConfigSource
	}
	return nil
}

func (m *CommonExtensionConfig_TapDSConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AdminConfig struct {
	ConfigId             string   `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdminConfig) Reset()         { *m = AdminConfig{} }
func (m *AdminConfig) String() string { return proto.CompactTextString(m) }
func (*AdminConfig) ProtoMessage()    {}
func (*AdminConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_d29738d4c8661d41, []int{1}
}

func (m *AdminConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminConfig.Unmarshal(m, b)
}
func (m *AdminConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminConfig.Marshal(b, m, deterministic)
}
func (m *AdminConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminConfig.Merge(m, src)
}
func (m *AdminConfig) XXX_Size() int {
	return xxx_messageInfo_AdminConfig.Size(m)
}
func (m *AdminConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AdminConfig proto.InternalMessageInfo

func (m *AdminConfig) GetConfigId() string {
	if m != nil {
		return m.ConfigId
	}
	return ""
}

func init() {
	proto.RegisterType((*CommonExtensionConfig)(nil), "envoy.extensions.common.tap.v3.CommonExtensionConfig")
	proto.RegisterType((*CommonExtensionConfig_TapDSConfig)(nil), "envoy.extensions.common.tap.v3.CommonExtensionConfig.TapDSConfig")
	proto.RegisterType((*AdminConfig)(nil), "envoy.extensions.common.tap.v3.AdminConfig")
}

func init() {
	proto.RegisterFile("envoy/extensions/common/tap/v3/common.proto", fileDescriptor_d29738d4c8661d41)
}

var fileDescriptor_d29738d4c8661d41 = []byte{
	// 455 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xcf, 0x8b, 0xd3, 0x40,
	0x14, 0xc7, 0x9d, 0xb4, 0xae, 0xbb, 0x93, 0x2c, 0x2c, 0x03, 0xa2, 0x44, 0x2c, 0xb5, 0x78, 0x58,
	0x58, 0x4d, 0xa0, 0x45, 0x84, 0xe2, 0xa5, 0x53, 0x0b, 0xeb, 0xad, 0x76, 0xbd, 0x2f, 0x63, 0x32,
	0x5b, 0x07, 0x9a, 0x99, 0x21, 0x99, 0x86, 0xf6, 0xe6, 0x51, 0xfc, 0x13, 0xfc, 0x3b, 0x3c, 0x79,
	0x17, 0xbd, 0xfa, 0xdf, 0x48, 0x4f, 0x32, 0x3f, 0x62, 0x52, 0x2d, 0x2d, 0xec, 0x2d, 0x6f, 0xde,
	0x9b, 0xcf, 0xfb, 0x7e, 0xdf, 0x9b, 0xc0, 0x0b, 0xca, 0x4b, 0xb1, 0x8e, 0xe9, 0x4a, 0x51, 0x5e,
	0x30, 0xc1, 0x8b, 0x38, 0x11, 0x59, 0x26, 0x78, 0xac, 0x88, 0x8c, 0xcb, 0x81, 0x8b, 0x22, 0x99,
	0x0b, 0x25, 0x50, 0xc7, 0x14, 0x47, 0x75, 0x71, 0xe4, 0xd2, 0x8a, 0xc8, 0xa8, 0x1c, 0x84, 0xe7,
	0x16, 0x96, 0x08, 0x7e, 0xc3, 0xe6, 0x71, 0x22, 0x72, 0x6a, 0x11, 0x3a, 0xbc, 0x2e, 0xc4, 0x32,
	0x4f, 0xa8, 0x25, 0x85, 0xdd, 0xad, 0xca, 0x1d, 0xbd, 0xc2, 0xc7, 0xcb, 0x54, 0x92, 0x98, 0x70,
	0x2e, 0x14, 0x51, 0x46, 0x58, 0xa1, 0x88, 0x5a, 0x16, 0x2e, 0xfd, 0xe4, 0xbf, 0x74, 0x49, 0x73,
	0xad, 0x89, 0xf1, 0xb9, 0x2b, 0x79, 0x50, 0x92, 0x05, 0x4b, 0x89, 0xa2, 0x71, 0xf5, 0x61, 0x13,
	0xbd, 0xaf, 0x6d, 0x78, 0x7f, 0x6c, 0x7a, 0x4d, 0x2a, 0x27, 0x63, 0x23, 0x04, 0x4d, 0x61, 0x40,
	0xd2, 0x8c, 0xf1, 0x6b, 0x2b, 0xec, 0x21, 0xe8, 0x82, 0x73, 0xbf, 0x7f, 0x11, 0xed, 0xf7, 0x1d,
	0x8d, 0xf4, 0x1d, 0x8b, 0xb8, 0xbc, 0x33, 0xf3, 0x49, 0x1d, 0xa2, 0x09, 0x3c, 0xd5, 0xba, 0x59,
	0x52, 0x21, 0x3d, 0x83, 0xec, 0x38, 0xa4, 0x3d, 0xac, 0x38, 0xef, 0x88, 0xfc, 0x4b, 0x09, 0xec,
	0x35, 0x87, 0xb9, 0x81, 0x81, 0x22, 0x32, 0x2d, 0x2a, 0x4a, 0xcb, 0x50, 0x46, 0x87, 0x84, 0xed,
	0x74, 0xa9, 0xdb, 0xbc, 0xbe, 0xaa, 0xe5, 0x1a, 0xb0, 0x0d, 0xc3, 0x1f, 0x00, 0xfa, 0x8d, 0x34,
	0x7a, 0x0b, 0x4f, 0xb7, 0xd6, 0xe7, 0x26, 0xd2, 0xdb, 0x96, 0xaf, 0x37, 0x6d, 0xdb, 0xe9, 0xf0,
	0xca, 0x54, 0xe2, 0xe3, 0x0d, 0xbe, 0xfb, 0x19, 0x78, 0x67, 0x60, 0x16, 0x24, 0x8d, 0x73, 0xf4,
	0x08, 0xb6, 0x39, 0xc9, 0xa8, 0x19, 0xc4, 0x09, 0xbe, 0xb7, 0xc1, 0xed, 0xdc, 0xeb, 0x82, 0x99,
	0x39, 0x1c, 0x5e, 0x7e, 0xf9, 0xfe, 0xa9, 0x33, 0x86, 0xa3, 0x7f, 0xf0, 0xb5, 0xa7, 0x3e, 0x59,
	0xc8, 0x0f, 0xe4, 0xb0, 0xb1, 0xe1, 0x2b, 0x4d, 0x7a, 0x09, 0x5f, 0xdc, 0x8a, 0x84, 0x11, 0xf4,
	0x9d, 0x6f, 0xb5, 0x96, 0x14, 0xb5, 0x7e, 0x63, 0xd0, 0x9b, 0x43, 0xbf, 0xb1, 0x68, 0xf4, 0x14,
	0x9e, 0xb8, 0x12, 0x96, 0x9a, 0xb1, 0x34, 0xcc, 0x1c, 0xdb, 0xcc, 0x9b, 0x74, 0xd8, 0xd7, 0x32,
	0x9e, 0xbb, 0xdf, 0x6c, 0x8f, 0x8c, 0x06, 0x19, 0x4f, 0xbe, 0x7d, 0xfc, 0xf9, 0xeb, 0xc8, 0x3b,
	0x6b, 0xc1, 0x67, 0x4c, 0xd8, 0x49, 0xcb, 0x5c, 0xac, 0xd6, 0x07, 0xb6, 0x8d, 0x7d, 0xeb, 0x65,
	0xaa, 0x1f, 0xf9, 0x14, 0xbc, 0x3f, 0x32, 0xaf, 0x7d, 0xf0, 0x27, 0x00, 0x00, 0xff, 0xff, 0xad,
	0x9e, 0x92, 0x2f, 0xe3, 0x03, 0x00, 0x00,
}
