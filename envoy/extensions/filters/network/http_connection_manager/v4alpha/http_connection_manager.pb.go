// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/extensions/filters/network/http_connection_manager/v4alpha/http_connection_manager.proto

package envoy_extensions_filters_network_http_connection_manager_v4alpha

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/go-control-plane/envoy/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/accesslog/v3"
	v4alpha1 "github.com/envoyproxy/go-control-plane/envoy/config/core/v4alpha"
	v4alpha "github.com/envoyproxy/go-control-plane/envoy/config/route/v4alpha"
	v4alpha2 "github.com/envoyproxy/go-control-plane/envoy/config/trace/v4alpha"
	v32 "github.com/envoyproxy/go-control-plane/envoy/type/tracing/v3"
	v31 "github.com/envoyproxy/go-control-plane/envoy/type/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	duration "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/golang/protobuf/ptypes/struct"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HttpConnectionManager_CodecType int32

const (
	HttpConnectionManager_AUTO  HttpConnectionManager_CodecType = 0
	HttpConnectionManager_HTTP1 HttpConnectionManager_CodecType = 1
	HttpConnectionManager_HTTP2 HttpConnectionManager_CodecType = 2
	HttpConnectionManager_HTTP3 HttpConnectionManager_CodecType = 3
)

var HttpConnectionManager_CodecType_name = map[int32]string{
	0: "AUTO",
	1: "HTTP1",
	2: "HTTP2",
	3: "HTTP3",
}

var HttpConnectionManager_CodecType_value = map[string]int32{
	"AUTO":  0,
	"HTTP1": 1,
	"HTTP2": 2,
	"HTTP3": 3,
}

func (x HttpConnectionManager_CodecType) String() string {
	return proto.EnumName(HttpConnectionManager_CodecType_name, int32(x))
}

func (HttpConnectionManager_CodecType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{0, 0}
}

type HttpConnectionManager_ServerHeaderTransformation int32

const (
	HttpConnectionManager_OVERWRITE        HttpConnectionManager_ServerHeaderTransformation = 0
	HttpConnectionManager_APPEND_IF_ABSENT HttpConnectionManager_ServerHeaderTransformation = 1
	HttpConnectionManager_PASS_THROUGH     HttpConnectionManager_ServerHeaderTransformation = 2
)

var HttpConnectionManager_ServerHeaderTransformation_name = map[int32]string{
	0: "OVERWRITE",
	1: "APPEND_IF_ABSENT",
	2: "PASS_THROUGH",
}

var HttpConnectionManager_ServerHeaderTransformation_value = map[string]int32{
	"OVERWRITE":        0,
	"APPEND_IF_ABSENT": 1,
	"PASS_THROUGH":     2,
}

func (x HttpConnectionManager_ServerHeaderTransformation) String() string {
	return proto.EnumName(HttpConnectionManager_ServerHeaderTransformation_name, int32(x))
}

func (HttpConnectionManager_ServerHeaderTransformation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{0, 1}
}

type HttpConnectionManager_ForwardClientCertDetails int32

const (
	HttpConnectionManager_SANITIZE            HttpConnectionManager_ForwardClientCertDetails = 0
	HttpConnectionManager_FORWARD_ONLY        HttpConnectionManager_ForwardClientCertDetails = 1
	HttpConnectionManager_APPEND_FORWARD      HttpConnectionManager_ForwardClientCertDetails = 2
	HttpConnectionManager_SANITIZE_SET        HttpConnectionManager_ForwardClientCertDetails = 3
	HttpConnectionManager_ALWAYS_FORWARD_ONLY HttpConnectionManager_ForwardClientCertDetails = 4
)

var HttpConnectionManager_ForwardClientCertDetails_name = map[int32]string{
	0: "SANITIZE",
	1: "FORWARD_ONLY",
	2: "APPEND_FORWARD",
	3: "SANITIZE_SET",
	4: "ALWAYS_FORWARD_ONLY",
}

var HttpConnectionManager_ForwardClientCertDetails_value = map[string]int32{
	"SANITIZE":            0,
	"FORWARD_ONLY":        1,
	"APPEND_FORWARD":      2,
	"SANITIZE_SET":        3,
	"ALWAYS_FORWARD_ONLY": 4,
}

func (x HttpConnectionManager_ForwardClientCertDetails) String() string {
	return proto.EnumName(HttpConnectionManager_ForwardClientCertDetails_name, int32(x))
}

func (HttpConnectionManager_ForwardClientCertDetails) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{0, 2}
}

type HttpConnectionManager_Tracing_OperationName int32

const (
	HttpConnectionManager_Tracing_INGRESS HttpConnectionManager_Tracing_OperationName = 0
	HttpConnectionManager_Tracing_EGRESS  HttpConnectionManager_Tracing_OperationName = 1
)

var HttpConnectionManager_Tracing_OperationName_name = map[int32]string{
	0: "INGRESS",
	1: "EGRESS",
}

var HttpConnectionManager_Tracing_OperationName_value = map[string]int32{
	"INGRESS": 0,
	"EGRESS":  1,
}

func (x HttpConnectionManager_Tracing_OperationName) String() string {
	return proto.EnumName(HttpConnectionManager_Tracing_OperationName_name, int32(x))
}

func (HttpConnectionManager_Tracing_OperationName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{0, 0, 0}
}

type HttpConnectionManager struct {
	CodecType  HttpConnectionManager_CodecType `protobuf:"varint,1,opt,name=codec_type,json=codecType,proto3,enum=envoy.extensions.filters.network.http_connection_manager.v4alpha.HttpConnectionManager_CodecType" json:"codec_type,omitempty"`
	StatPrefix string                          `protobuf:"bytes,2,opt,name=stat_prefix,json=statPrefix,proto3" json:"stat_prefix,omitempty"`
	// Types that are valid to be assigned to RouteSpecifier:
	//	*HttpConnectionManager_Rds
	//	*HttpConnectionManager_RouteConfig
	//	*HttpConnectionManager_ScopedRoutes
	RouteSpecifier                             isHttpConnectionManager_RouteSpecifier             `protobuf_oneof:"route_specifier"`
	HttpFilters                                []*HttpFilter                                      `protobuf:"bytes,5,rep,name=http_filters,json=httpFilters,proto3" json:"http_filters,omitempty"`
	AddUserAgent                               *wrappers.BoolValue                                `protobuf:"bytes,6,opt,name=add_user_agent,json=addUserAgent,proto3" json:"add_user_agent,omitempty"`
	Tracing                                    *HttpConnectionManager_Tracing                     `protobuf:"bytes,7,opt,name=tracing,proto3" json:"tracing,omitempty"`
	CommonHttpProtocolOptions                  *v4alpha1.HttpProtocolOptions                      `protobuf:"bytes,35,opt,name=common_http_protocol_options,json=commonHttpProtocolOptions,proto3" json:"common_http_protocol_options,omitempty"`
	HttpProtocolOptions                        *v4alpha1.Http1ProtocolOptions                     `protobuf:"bytes,8,opt,name=http_protocol_options,json=httpProtocolOptions,proto3" json:"http_protocol_options,omitempty"`
	Http2ProtocolOptions                       *v4alpha1.Http2ProtocolOptions                     `protobuf:"bytes,9,opt,name=http2_protocol_options,json=http2ProtocolOptions,proto3" json:"http2_protocol_options,omitempty"`
	ServerName                                 string                                             `protobuf:"bytes,10,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	ServerHeaderTransformation                 HttpConnectionManager_ServerHeaderTransformation   `protobuf:"varint,34,opt,name=server_header_transformation,json=serverHeaderTransformation,proto3,enum=envoy.extensions.filters.network.http_connection_manager.v4alpha.HttpConnectionManager_ServerHeaderTransformation" json:"server_header_transformation,omitempty"`
	MaxRequestHeadersKb                        *wrappers.UInt32Value                              `protobuf:"bytes,29,opt,name=max_request_headers_kb,json=maxRequestHeadersKb,proto3" json:"max_request_headers_kb,omitempty"`
	StreamIdleTimeout                          *duration.Duration                                 `protobuf:"bytes,24,opt,name=stream_idle_timeout,json=streamIdleTimeout,proto3" json:"stream_idle_timeout,omitempty"`
	RequestTimeout                             *duration.Duration                                 `protobuf:"bytes,28,opt,name=request_timeout,json=requestTimeout,proto3" json:"request_timeout,omitempty"`
	DrainTimeout                               *duration.Duration                                 `protobuf:"bytes,12,opt,name=drain_timeout,json=drainTimeout,proto3" json:"drain_timeout,omitempty"`
	DelayedCloseTimeout                        *duration.Duration                                 `protobuf:"bytes,26,opt,name=delayed_close_timeout,json=delayedCloseTimeout,proto3" json:"delayed_close_timeout,omitempty"`
	AccessLog                                  []*v3.AccessLog                                    `protobuf:"bytes,13,rep,name=access_log,json=accessLog,proto3" json:"access_log,omitempty"`
	UseRemoteAddress                           *wrappers.BoolValue                                `protobuf:"bytes,14,opt,name=use_remote_address,json=useRemoteAddress,proto3" json:"use_remote_address,omitempty"`
	XffNumTrustedHops                          uint32                                             `protobuf:"varint,19,opt,name=xff_num_trusted_hops,json=xffNumTrustedHops,proto3" json:"xff_num_trusted_hops,omitempty"`
	InternalAddressConfig                      *HttpConnectionManager_InternalAddressConfig       `protobuf:"bytes,25,opt,name=internal_address_config,json=internalAddressConfig,proto3" json:"internal_address_config,omitempty"`
	SkipXffAppend                              bool                                               `protobuf:"varint,21,opt,name=skip_xff_append,json=skipXffAppend,proto3" json:"skip_xff_append,omitempty"`
	Via                                        string                                             `protobuf:"bytes,22,opt,name=via,proto3" json:"via,omitempty"`
	GenerateRequestId                          *wrappers.BoolValue                                `protobuf:"bytes,15,opt,name=generate_request_id,json=generateRequestId,proto3" json:"generate_request_id,omitempty"`
	PreserveExternalRequestId                  bool                                               `protobuf:"varint,32,opt,name=preserve_external_request_id,json=preserveExternalRequestId,proto3" json:"preserve_external_request_id,omitempty"`
	ForwardClientCertDetails                   HttpConnectionManager_ForwardClientCertDetails     `protobuf:"varint,16,opt,name=forward_client_cert_details,json=forwardClientCertDetails,proto3,enum=envoy.extensions.filters.network.http_connection_manager.v4alpha.HttpConnectionManager_ForwardClientCertDetails" json:"forward_client_cert_details,omitempty"`
	SetCurrentClientCertDetails                *HttpConnectionManager_SetCurrentClientCertDetails `protobuf:"bytes,17,opt,name=set_current_client_cert_details,json=setCurrentClientCertDetails,proto3" json:"set_current_client_cert_details,omitempty"`
	Proxy_100Continue                          bool                                               `protobuf:"varint,18,opt,name=proxy_100_continue,json=proxy100Continue,proto3" json:"proxy_100_continue,omitempty"`
	RepresentIpv4RemoteAddressAsIpv4MappedIpv6 bool                                               `protobuf:"varint,20,opt,name=represent_ipv4_remote_address_as_ipv4_mapped_ipv6,json=representIpv4RemoteAddressAsIpv4MappedIpv6,proto3" json:"represent_ipv4_remote_address_as_ipv4_mapped_ipv6,omitempty"`
	UpgradeConfigs                             []*HttpConnectionManager_UpgradeConfig             `protobuf:"bytes,23,rep,name=upgrade_configs,json=upgradeConfigs,proto3" json:"upgrade_configs,omitempty"`
	NormalizePath                              *wrappers.BoolValue                                `protobuf:"bytes,30,opt,name=normalize_path,json=normalizePath,proto3" json:"normalize_path,omitempty"`
	MergeSlashes                               bool                                               `protobuf:"varint,33,opt,name=merge_slashes,json=mergeSlashes,proto3" json:"merge_slashes,omitempty"`
	RequestIdExtension                         *RequestIDExtension                                `protobuf:"bytes,36,opt,name=request_id_extension,json=requestIdExtension,proto3" json:"request_id_extension,omitempty"`
	XXX_NoUnkeyedLiteral                       struct{}                                           `json:"-"`
	XXX_unrecognized                           []byte                                             `json:"-"`
	XXX_sizecache                              int32                                              `json:"-"`
}

func (m *HttpConnectionManager) Reset()         { *m = HttpConnectionManager{} }
func (m *HttpConnectionManager) String() string { return proto.CompactTextString(m) }
func (*HttpConnectionManager) ProtoMessage()    {}
func (*HttpConnectionManager) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{0}
}

func (m *HttpConnectionManager) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpConnectionManager.Unmarshal(m, b)
}
func (m *HttpConnectionManager) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpConnectionManager.Marshal(b, m, deterministic)
}
func (m *HttpConnectionManager) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpConnectionManager.Merge(m, src)
}
func (m *HttpConnectionManager) XXX_Size() int {
	return xxx_messageInfo_HttpConnectionManager.Size(m)
}
func (m *HttpConnectionManager) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpConnectionManager.DiscardUnknown(m)
}

var xxx_messageInfo_HttpConnectionManager proto.InternalMessageInfo

func (m *HttpConnectionManager) GetCodecType() HttpConnectionManager_CodecType {
	if m != nil {
		return m.CodecType
	}
	return HttpConnectionManager_AUTO
}

func (m *HttpConnectionManager) GetStatPrefix() string {
	if m != nil {
		return m.StatPrefix
	}
	return ""
}

type isHttpConnectionManager_RouteSpecifier interface {
	isHttpConnectionManager_RouteSpecifier()
}

type HttpConnectionManager_Rds struct {
	Rds *Rds `protobuf:"bytes,3,opt,name=rds,proto3,oneof"`
}

type HttpConnectionManager_RouteConfig struct {
	RouteConfig *v4alpha.RouteConfiguration `protobuf:"bytes,4,opt,name=route_config,json=routeConfig,proto3,oneof"`
}

type HttpConnectionManager_ScopedRoutes struct {
	ScopedRoutes *ScopedRoutes `protobuf:"bytes,31,opt,name=scoped_routes,json=scopedRoutes,proto3,oneof"`
}

func (*HttpConnectionManager_Rds) isHttpConnectionManager_RouteSpecifier() {}

func (*HttpConnectionManager_RouteConfig) isHttpConnectionManager_RouteSpecifier() {}

func (*HttpConnectionManager_ScopedRoutes) isHttpConnectionManager_RouteSpecifier() {}

func (m *HttpConnectionManager) GetRouteSpecifier() isHttpConnectionManager_RouteSpecifier {
	if m != nil {
		return m.RouteSpecifier
	}
	return nil
}

func (m *HttpConnectionManager) GetRds() *Rds {
	if x, ok := m.GetRouteSpecifier().(*HttpConnectionManager_Rds); ok {
		return x.Rds
	}
	return nil
}

func (m *HttpConnectionManager) GetRouteConfig() *v4alpha.RouteConfiguration {
	if x, ok := m.GetRouteSpecifier().(*HttpConnectionManager_RouteConfig); ok {
		return x.RouteConfig
	}
	return nil
}

func (m *HttpConnectionManager) GetScopedRoutes() *ScopedRoutes {
	if x, ok := m.GetRouteSpecifier().(*HttpConnectionManager_ScopedRoutes); ok {
		return x.ScopedRoutes
	}
	return nil
}

func (m *HttpConnectionManager) GetHttpFilters() []*HttpFilter {
	if m != nil {
		return m.HttpFilters
	}
	return nil
}

func (m *HttpConnectionManager) GetAddUserAgent() *wrappers.BoolValue {
	if m != nil {
		return m.AddUserAgent
	}
	return nil
}

func (m *HttpConnectionManager) GetTracing() *HttpConnectionManager_Tracing {
	if m != nil {
		return m.Tracing
	}
	return nil
}

func (m *HttpConnectionManager) GetCommonHttpProtocolOptions() *v4alpha1.HttpProtocolOptions {
	if m != nil {
		return m.CommonHttpProtocolOptions
	}
	return nil
}

func (m *HttpConnectionManager) GetHttpProtocolOptions() *v4alpha1.Http1ProtocolOptions {
	if m != nil {
		return m.HttpProtocolOptions
	}
	return nil
}

func (m *HttpConnectionManager) GetHttp2ProtocolOptions() *v4alpha1.Http2ProtocolOptions {
	if m != nil {
		return m.Http2ProtocolOptions
	}
	return nil
}

func (m *HttpConnectionManager) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *HttpConnectionManager) GetServerHeaderTransformation() HttpConnectionManager_ServerHeaderTransformation {
	if m != nil {
		return m.ServerHeaderTransformation
	}
	return HttpConnectionManager_OVERWRITE
}

func (m *HttpConnectionManager) GetMaxRequestHeadersKb() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxRequestHeadersKb
	}
	return nil
}

func (m *HttpConnectionManager) GetStreamIdleTimeout() *duration.Duration {
	if m != nil {
		return m.StreamIdleTimeout
	}
	return nil
}

func (m *HttpConnectionManager) GetRequestTimeout() *duration.Duration {
	if m != nil {
		return m.RequestTimeout
	}
	return nil
}

func (m *HttpConnectionManager) GetDrainTimeout() *duration.Duration {
	if m != nil {
		return m.DrainTimeout
	}
	return nil
}

func (m *HttpConnectionManager) GetDelayedCloseTimeout() *duration.Duration {
	if m != nil {
		return m.DelayedCloseTimeout
	}
	return nil
}

func (m *HttpConnectionManager) GetAccessLog() []*v3.AccessLog {
	if m != nil {
		return m.AccessLog
	}
	return nil
}

func (m *HttpConnectionManager) GetUseRemoteAddress() *wrappers.BoolValue {
	if m != nil {
		return m.UseRemoteAddress
	}
	return nil
}

func (m *HttpConnectionManager) GetXffNumTrustedHops() uint32 {
	if m != nil {
		return m.XffNumTrustedHops
	}
	return 0
}

func (m *HttpConnectionManager) GetInternalAddressConfig() *HttpConnectionManager_InternalAddressConfig {
	if m != nil {
		return m.InternalAddressConfig
	}
	return nil
}

func (m *HttpConnectionManager) GetSkipXffAppend() bool {
	if m != nil {
		return m.SkipXffAppend
	}
	return false
}

func (m *HttpConnectionManager) GetVia() string {
	if m != nil {
		return m.Via
	}
	return ""
}

func (m *HttpConnectionManager) GetGenerateRequestId() *wrappers.BoolValue {
	if m != nil {
		return m.GenerateRequestId
	}
	return nil
}

func (m *HttpConnectionManager) GetPreserveExternalRequestId() bool {
	if m != nil {
		return m.PreserveExternalRequestId
	}
	return false
}

func (m *HttpConnectionManager) GetForwardClientCertDetails() HttpConnectionManager_ForwardClientCertDetails {
	if m != nil {
		return m.ForwardClientCertDetails
	}
	return HttpConnectionManager_SANITIZE
}

func (m *HttpConnectionManager) GetSetCurrentClientCertDetails() *HttpConnectionManager_SetCurrentClientCertDetails {
	if m != nil {
		return m.SetCurrentClientCertDetails
	}
	return nil
}

func (m *HttpConnectionManager) GetProxy_100Continue() bool {
	if m != nil {
		return m.Proxy_100Continue
	}
	return false
}

func (m *HttpConnectionManager) GetRepresentIpv4RemoteAddressAsIpv4MappedIpv6() bool {
	if m != nil {
		return m.RepresentIpv4RemoteAddressAsIpv4MappedIpv6
	}
	return false
}

func (m *HttpConnectionManager) GetUpgradeConfigs() []*HttpConnectionManager_UpgradeConfig {
	if m != nil {
		return m.UpgradeConfigs
	}
	return nil
}

func (m *HttpConnectionManager) GetNormalizePath() *wrappers.BoolValue {
	if m != nil {
		return m.NormalizePath
	}
	return nil
}

func (m *HttpConnectionManager) GetMergeSlashes() bool {
	if m != nil {
		return m.MergeSlashes
	}
	return false
}

func (m *HttpConnectionManager) GetRequestIdExtension() *RequestIDExtension {
	if m != nil {
		return m.RequestIdExtension
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HttpConnectionManager) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HttpConnectionManager_Rds)(nil),
		(*HttpConnectionManager_RouteConfig)(nil),
		(*HttpConnectionManager_ScopedRoutes)(nil),
	}
}

type HttpConnectionManager_Tracing struct {
	ClientSampling       *v31.Percent           `protobuf:"bytes,3,opt,name=client_sampling,json=clientSampling,proto3" json:"client_sampling,omitempty"`
	RandomSampling       *v31.Percent           `protobuf:"bytes,4,opt,name=random_sampling,json=randomSampling,proto3" json:"random_sampling,omitempty"`
	OverallSampling      *v31.Percent           `protobuf:"bytes,5,opt,name=overall_sampling,json=overallSampling,proto3" json:"overall_sampling,omitempty"`
	Verbose              bool                   `protobuf:"varint,6,opt,name=verbose,proto3" json:"verbose,omitempty"`
	MaxPathTagLength     *wrappers.UInt32Value  `protobuf:"bytes,7,opt,name=max_path_tag_length,json=maxPathTagLength,proto3" json:"max_path_tag_length,omitempty"`
	CustomTags           []*v32.CustomTag       `protobuf:"bytes,8,rep,name=custom_tags,json=customTags,proto3" json:"custom_tags,omitempty"`
	Provider             *v4alpha2.Tracing_Http `protobuf:"bytes,9,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *HttpConnectionManager_Tracing) Reset()         { *m = HttpConnectionManager_Tracing{} }
func (m *HttpConnectionManager_Tracing) String() string { return proto.CompactTextString(m) }
func (*HttpConnectionManager_Tracing) ProtoMessage()    {}
func (*HttpConnectionManager_Tracing) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{0, 0}
}

func (m *HttpConnectionManager_Tracing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpConnectionManager_Tracing.Unmarshal(m, b)
}
func (m *HttpConnectionManager_Tracing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpConnectionManager_Tracing.Marshal(b, m, deterministic)
}
func (m *HttpConnectionManager_Tracing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpConnectionManager_Tracing.Merge(m, src)
}
func (m *HttpConnectionManager_Tracing) XXX_Size() int {
	return xxx_messageInfo_HttpConnectionManager_Tracing.Size(m)
}
func (m *HttpConnectionManager_Tracing) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpConnectionManager_Tracing.DiscardUnknown(m)
}

var xxx_messageInfo_HttpConnectionManager_Tracing proto.InternalMessageInfo

func (m *HttpConnectionManager_Tracing) GetClientSampling() *v31.Percent {
	if m != nil {
		return m.ClientSampling
	}
	return nil
}

func (m *HttpConnectionManager_Tracing) GetRandomSampling() *v31.Percent {
	if m != nil {
		return m.RandomSampling
	}
	return nil
}

func (m *HttpConnectionManager_Tracing) GetOverallSampling() *v31.Percent {
	if m != nil {
		return m.OverallSampling
	}
	return nil
}

func (m *HttpConnectionManager_Tracing) GetVerbose() bool {
	if m != nil {
		return m.Verbose
	}
	return false
}

func (m *HttpConnectionManager_Tracing) GetMaxPathTagLength() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxPathTagLength
	}
	return nil
}

func (m *HttpConnectionManager_Tracing) GetCustomTags() []*v32.CustomTag {
	if m != nil {
		return m.CustomTags
	}
	return nil
}

func (m *HttpConnectionManager_Tracing) GetProvider() *v4alpha2.Tracing_Http {
	if m != nil {
		return m.Provider
	}
	return nil
}

type HttpConnectionManager_InternalAddressConfig struct {
	UnixSockets          bool     `protobuf:"varint,1,opt,name=unix_sockets,json=unixSockets,proto3" json:"unix_sockets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpConnectionManager_InternalAddressConfig) Reset() {
	*m = HttpConnectionManager_InternalAddressConfig{}
}
func (m *HttpConnectionManager_InternalAddressConfig) String() string {
	return proto.CompactTextString(m)
}
func (*HttpConnectionManager_InternalAddressConfig) ProtoMessage() {}
func (*HttpConnectionManager_InternalAddressConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{0, 1}
}

func (m *HttpConnectionManager_InternalAddressConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpConnectionManager_InternalAddressConfig.Unmarshal(m, b)
}
func (m *HttpConnectionManager_InternalAddressConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpConnectionManager_InternalAddressConfig.Marshal(b, m, deterministic)
}
func (m *HttpConnectionManager_InternalAddressConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpConnectionManager_InternalAddressConfig.Merge(m, src)
}
func (m *HttpConnectionManager_InternalAddressConfig) XXX_Size() int {
	return xxx_messageInfo_HttpConnectionManager_InternalAddressConfig.Size(m)
}
func (m *HttpConnectionManager_InternalAddressConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpConnectionManager_InternalAddressConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HttpConnectionManager_InternalAddressConfig proto.InternalMessageInfo

func (m *HttpConnectionManager_InternalAddressConfig) GetUnixSockets() bool {
	if m != nil {
		return m.UnixSockets
	}
	return false
}

type HttpConnectionManager_SetCurrentClientCertDetails struct {
	Subject              *wrappers.BoolValue `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Cert                 bool                `protobuf:"varint,3,opt,name=cert,proto3" json:"cert,omitempty"`
	Chain                bool                `protobuf:"varint,6,opt,name=chain,proto3" json:"chain,omitempty"`
	Dns                  bool                `protobuf:"varint,4,opt,name=dns,proto3" json:"dns,omitempty"`
	Uri                  bool                `protobuf:"varint,5,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *HttpConnectionManager_SetCurrentClientCertDetails) Reset() {
	*m = HttpConnectionManager_SetCurrentClientCertDetails{}
}
func (m *HttpConnectionManager_SetCurrentClientCertDetails) String() string {
	return proto.CompactTextString(m)
}
func (*HttpConnectionManager_SetCurrentClientCertDetails) ProtoMessage() {}
func (*HttpConnectionManager_SetCurrentClientCertDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{0, 2}
}

func (m *HttpConnectionManager_SetCurrentClientCertDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpConnectionManager_SetCurrentClientCertDetails.Unmarshal(m, b)
}
func (m *HttpConnectionManager_SetCurrentClientCertDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpConnectionManager_SetCurrentClientCertDetails.Marshal(b, m, deterministic)
}
func (m *HttpConnectionManager_SetCurrentClientCertDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpConnectionManager_SetCurrentClientCertDetails.Merge(m, src)
}
func (m *HttpConnectionManager_SetCurrentClientCertDetails) XXX_Size() int {
	return xxx_messageInfo_HttpConnectionManager_SetCurrentClientCertDetails.Size(m)
}
func (m *HttpConnectionManager_SetCurrentClientCertDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpConnectionManager_SetCurrentClientCertDetails.DiscardUnknown(m)
}

var xxx_messageInfo_HttpConnectionManager_SetCurrentClientCertDetails proto.InternalMessageInfo

func (m *HttpConnectionManager_SetCurrentClientCertDetails) GetSubject() *wrappers.BoolValue {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *HttpConnectionManager_SetCurrentClientCertDetails) GetCert() bool {
	if m != nil {
		return m.Cert
	}
	return false
}

func (m *HttpConnectionManager_SetCurrentClientCertDetails) GetChain() bool {
	if m != nil {
		return m.Chain
	}
	return false
}

func (m *HttpConnectionManager_SetCurrentClientCertDetails) GetDns() bool {
	if m != nil {
		return m.Dns
	}
	return false
}

func (m *HttpConnectionManager_SetCurrentClientCertDetails) GetUri() bool {
	if m != nil {
		return m.Uri
	}
	return false
}

type HttpConnectionManager_UpgradeConfig struct {
	UpgradeType          string              `protobuf:"bytes,1,opt,name=upgrade_type,json=upgradeType,proto3" json:"upgrade_type,omitempty"`
	Filters              []*HttpFilter       `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	Enabled              *wrappers.BoolValue `protobuf:"bytes,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *HttpConnectionManager_UpgradeConfig) Reset()         { *m = HttpConnectionManager_UpgradeConfig{} }
func (m *HttpConnectionManager_UpgradeConfig) String() string { return proto.CompactTextString(m) }
func (*HttpConnectionManager_UpgradeConfig) ProtoMessage()    {}
func (*HttpConnectionManager_UpgradeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{0, 3}
}

func (m *HttpConnectionManager_UpgradeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpConnectionManager_UpgradeConfig.Unmarshal(m, b)
}
func (m *HttpConnectionManager_UpgradeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpConnectionManager_UpgradeConfig.Marshal(b, m, deterministic)
}
func (m *HttpConnectionManager_UpgradeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpConnectionManager_UpgradeConfig.Merge(m, src)
}
func (m *HttpConnectionManager_UpgradeConfig) XXX_Size() int {
	return xxx_messageInfo_HttpConnectionManager_UpgradeConfig.Size(m)
}
func (m *HttpConnectionManager_UpgradeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpConnectionManager_UpgradeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HttpConnectionManager_UpgradeConfig proto.InternalMessageInfo

func (m *HttpConnectionManager_UpgradeConfig) GetUpgradeType() string {
	if m != nil {
		return m.UpgradeType
	}
	return ""
}

func (m *HttpConnectionManager_UpgradeConfig) GetFilters() []*HttpFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *HttpConnectionManager_UpgradeConfig) GetEnabled() *wrappers.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

type Rds struct {
	ConfigSource         *v4alpha1.ConfigSource `protobuf:"bytes,1,opt,name=config_source,json=configSource,proto3" json:"config_source,omitempty"`
	RouteConfigName      string                 `protobuf:"bytes,2,opt,name=route_config_name,json=routeConfigName,proto3" json:"route_config_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Rds) Reset()         { *m = Rds{} }
func (m *Rds) String() string { return proto.CompactTextString(m) }
func (*Rds) ProtoMessage()    {}
func (*Rds) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{1}
}

func (m *Rds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rds.Unmarshal(m, b)
}
func (m *Rds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rds.Marshal(b, m, deterministic)
}
func (m *Rds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rds.Merge(m, src)
}
func (m *Rds) XXX_Size() int {
	return xxx_messageInfo_Rds.Size(m)
}
func (m *Rds) XXX_DiscardUnknown() {
	xxx_messageInfo_Rds.DiscardUnknown(m)
}

var xxx_messageInfo_Rds proto.InternalMessageInfo

func (m *Rds) GetConfigSource() *v4alpha1.ConfigSource {
	if m != nil {
		return m.ConfigSource
	}
	return nil
}

func (m *Rds) GetRouteConfigName() string {
	if m != nil {
		return m.RouteConfigName
	}
	return ""
}

type ScopedRouteConfigurationsList struct {
	ScopedRouteConfigurations []*v4alpha.ScopedRouteConfiguration `protobuf:"bytes,1,rep,name=scoped_route_configurations,json=scopedRouteConfigurations,proto3" json:"scoped_route_configurations,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                            `json:"-"`
	XXX_unrecognized          []byte                              `json:"-"`
	XXX_sizecache             int32                               `json:"-"`
}

func (m *ScopedRouteConfigurationsList) Reset()         { *m = ScopedRouteConfigurationsList{} }
func (m *ScopedRouteConfigurationsList) String() string { return proto.CompactTextString(m) }
func (*ScopedRouteConfigurationsList) ProtoMessage()    {}
func (*ScopedRouteConfigurationsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{2}
}

func (m *ScopedRouteConfigurationsList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScopedRouteConfigurationsList.Unmarshal(m, b)
}
func (m *ScopedRouteConfigurationsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScopedRouteConfigurationsList.Marshal(b, m, deterministic)
}
func (m *ScopedRouteConfigurationsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScopedRouteConfigurationsList.Merge(m, src)
}
func (m *ScopedRouteConfigurationsList) XXX_Size() int {
	return xxx_messageInfo_ScopedRouteConfigurationsList.Size(m)
}
func (m *ScopedRouteConfigurationsList) XXX_DiscardUnknown() {
	xxx_messageInfo_ScopedRouteConfigurationsList.DiscardUnknown(m)
}

var xxx_messageInfo_ScopedRouteConfigurationsList proto.InternalMessageInfo

func (m *ScopedRouteConfigurationsList) GetScopedRouteConfigurations() []*v4alpha.ScopedRouteConfiguration {
	if m != nil {
		return m.ScopedRouteConfigurations
	}
	return nil
}

type ScopedRoutes struct {
	Name            string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ScopeKeyBuilder *ScopedRoutes_ScopeKeyBuilder `protobuf:"bytes,2,opt,name=scope_key_builder,json=scopeKeyBuilder,proto3" json:"scope_key_builder,omitempty"`
	RdsConfigSource *v4alpha1.ConfigSource        `protobuf:"bytes,3,opt,name=rds_config_source,json=rdsConfigSource,proto3" json:"rds_config_source,omitempty"`
	// Types that are valid to be assigned to ConfigSpecifier:
	//	*ScopedRoutes_ScopedRouteConfigurationsList
	//	*ScopedRoutes_ScopedRds
	ConfigSpecifier      isScopedRoutes_ConfigSpecifier `protobuf_oneof:"config_specifier"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ScopedRoutes) Reset()         { *m = ScopedRoutes{} }
func (m *ScopedRoutes) String() string { return proto.CompactTextString(m) }
func (*ScopedRoutes) ProtoMessage()    {}
func (*ScopedRoutes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{3}
}

func (m *ScopedRoutes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScopedRoutes.Unmarshal(m, b)
}
func (m *ScopedRoutes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScopedRoutes.Marshal(b, m, deterministic)
}
func (m *ScopedRoutes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScopedRoutes.Merge(m, src)
}
func (m *ScopedRoutes) XXX_Size() int {
	return xxx_messageInfo_ScopedRoutes.Size(m)
}
func (m *ScopedRoutes) XXX_DiscardUnknown() {
	xxx_messageInfo_ScopedRoutes.DiscardUnknown(m)
}

var xxx_messageInfo_ScopedRoutes proto.InternalMessageInfo

func (m *ScopedRoutes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ScopedRoutes) GetScopeKeyBuilder() *ScopedRoutes_ScopeKeyBuilder {
	if m != nil {
		return m.ScopeKeyBuilder
	}
	return nil
}

func (m *ScopedRoutes) GetRdsConfigSource() *v4alpha1.ConfigSource {
	if m != nil {
		return m.RdsConfigSource
	}
	return nil
}

type isScopedRoutes_ConfigSpecifier interface {
	isScopedRoutes_ConfigSpecifier()
}

type ScopedRoutes_ScopedRouteConfigurationsList struct {
	ScopedRouteConfigurationsList *ScopedRouteConfigurationsList `protobuf:"bytes,4,opt,name=scoped_route_configurations_list,json=scopedRouteConfigurationsList,proto3,oneof"`
}

type ScopedRoutes_ScopedRds struct {
	ScopedRds *ScopedRds `protobuf:"bytes,5,opt,name=scoped_rds,json=scopedRds,proto3,oneof"`
}

func (*ScopedRoutes_ScopedRouteConfigurationsList) isScopedRoutes_ConfigSpecifier() {}

func (*ScopedRoutes_ScopedRds) isScopedRoutes_ConfigSpecifier() {}

func (m *ScopedRoutes) GetConfigSpecifier() isScopedRoutes_ConfigSpecifier {
	if m != nil {
		return m.ConfigSpecifier
	}
	return nil
}

func (m *ScopedRoutes) GetScopedRouteConfigurationsList() *ScopedRouteConfigurationsList {
	if x, ok := m.GetConfigSpecifier().(*ScopedRoutes_ScopedRouteConfigurationsList); ok {
		return x.ScopedRouteConfigurationsList
	}
	return nil
}

func (m *ScopedRoutes) GetScopedRds() *ScopedRds {
	if x, ok := m.GetConfigSpecifier().(*ScopedRoutes_ScopedRds); ok {
		return x.ScopedRds
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ScopedRoutes) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ScopedRoutes_ScopedRouteConfigurationsList)(nil),
		(*ScopedRoutes_ScopedRds)(nil),
	}
}

type ScopedRoutes_ScopeKeyBuilder struct {
	Fragments            []*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder `protobuf:"bytes,1,rep,name=fragments,proto3" json:"fragments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *ScopedRoutes_ScopeKeyBuilder) Reset()         { *m = ScopedRoutes_ScopeKeyBuilder{} }
func (m *ScopedRoutes_ScopeKeyBuilder) String() string { return proto.CompactTextString(m) }
func (*ScopedRoutes_ScopeKeyBuilder) ProtoMessage()    {}
func (*ScopedRoutes_ScopeKeyBuilder) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{3, 0}
}

func (m *ScopedRoutes_ScopeKeyBuilder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder.Unmarshal(m, b)
}
func (m *ScopedRoutes_ScopeKeyBuilder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder.Marshal(b, m, deterministic)
}
func (m *ScopedRoutes_ScopeKeyBuilder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder.Merge(m, src)
}
func (m *ScopedRoutes_ScopeKeyBuilder) XXX_Size() int {
	return xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder.Size(m)
}
func (m *ScopedRoutes_ScopeKeyBuilder) XXX_DiscardUnknown() {
	xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder.DiscardUnknown(m)
}

var xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder proto.InternalMessageInfo

func (m *ScopedRoutes_ScopeKeyBuilder) GetFragments() []*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder {
	if m != nil {
		return m.Fragments
	}
	return nil
}

type ScopedRoutes_ScopeKeyBuilder_FragmentBuilder struct {
	// Types that are valid to be assigned to Type:
	//	*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_
	Type                 isScopedRoutes_ScopeKeyBuilder_FragmentBuilder_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder) Reset() {
	*m = ScopedRoutes_ScopeKeyBuilder_FragmentBuilder{}
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder) String() string {
	return proto.CompactTextString(m)
}
func (*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder) ProtoMessage() {}
func (*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{3, 0, 0}
}

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder.Unmarshal(m, b)
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder.Marshal(b, m, deterministic)
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder.Merge(m, src)
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder) XXX_Size() int {
	return xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder.Size(m)
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder) XXX_DiscardUnknown() {
	xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder.DiscardUnknown(m)
}

var xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder proto.InternalMessageInfo

type isScopedRoutes_ScopeKeyBuilder_FragmentBuilder_Type interface {
	isScopedRoutes_ScopeKeyBuilder_FragmentBuilder_Type()
}

type ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_ struct {
	HeaderValueExtractor *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor `protobuf:"bytes,1,opt,name=header_value_extractor,json=headerValueExtractor,proto3,oneof"`
}

func (*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_) isScopedRoutes_ScopeKeyBuilder_FragmentBuilder_Type() {
}

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder) GetType() isScopedRoutes_ScopeKeyBuilder_FragmentBuilder_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder) GetHeaderValueExtractor() *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor {
	if x, ok := m.GetType().(*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_); ok {
		return x.HeaderValueExtractor
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_)(nil),
	}
}

type ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor struct {
	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ElementSeparator string `protobuf:"bytes,2,opt,name=element_separator,json=elementSeparator,proto3" json:"element_separator,omitempty"`
	// Types that are valid to be assigned to ExtractType:
	//	*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_Index
	//	*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_Element
	ExtractType          isScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_ExtractType `protobuf_oneof:"extract_type"`
	XXX_NoUnkeyedLiteral struct{}                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                          `json:"-"`
	XXX_sizecache        int32                                                                           `json:"-"`
}

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) Reset() {
	*m = ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor{}
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) String() string {
	return proto.CompactTextString(m)
}
func (*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) ProtoMessage() {}
func (*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{3, 0, 0, 0}
}

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor.Unmarshal(m, b)
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor.Marshal(b, m, deterministic)
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor.Merge(m, src)
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) XXX_Size() int {
	return xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor.Size(m)
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) XXX_DiscardUnknown() {
	xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor.DiscardUnknown(m)
}

var xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor proto.InternalMessageInfo

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) GetElementSeparator() string {
	if m != nil {
		return m.ElementSeparator
	}
	return ""
}

type isScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_ExtractType interface {
	isScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_ExtractType()
}

type ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_Index struct {
	Index uint32 `protobuf:"varint,3,opt,name=index,proto3,oneof"`
}

type ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_Element struct {
	Element *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement `protobuf:"bytes,4,opt,name=element,proto3,oneof"`
}

func (*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_Index) isScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_ExtractType() {
}

func (*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_Element) isScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_ExtractType() {
}

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) GetExtractType() isScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_ExtractType {
	if m != nil {
		return m.ExtractType
	}
	return nil
}

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) GetIndex() uint32 {
	if x, ok := m.GetExtractType().(*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_Index); ok {
		return x.Index
	}
	return 0
}

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) GetElement() *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement {
	if x, ok := m.GetExtractType().(*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_Element); ok {
		return x.Element
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_Index)(nil),
		(*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_Element)(nil),
	}
}

type ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement struct {
	Separator            string   `protobuf:"bytes,1,opt,name=separator,proto3" json:"separator,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement) Reset() {
	*m = ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement{}
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement) String() string {
	return proto.CompactTextString(m)
}
func (*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement) ProtoMessage() {}
func (*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{3, 0, 0, 0, 0}
}

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement.Unmarshal(m, b)
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement.Marshal(b, m, deterministic)
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement.Merge(m, src)
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement) XXX_Size() int {
	return xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement.Size(m)
}
func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement) XXX_DiscardUnknown() {
	xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement.DiscardUnknown(m)
}

var xxx_messageInfo_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement proto.InternalMessageInfo

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement) GetSeparator() string {
	if m != nil {
		return m.Separator
	}
	return ""
}

func (m *ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type ScopedRds struct {
	ScopedRdsConfigSource *v4alpha1.ConfigSource `protobuf:"bytes,1,opt,name=scoped_rds_config_source,json=scopedRdsConfigSource,proto3" json:"scoped_rds_config_source,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *ScopedRds) Reset()         { *m = ScopedRds{} }
func (m *ScopedRds) String() string { return proto.CompactTextString(m) }
func (*ScopedRds) ProtoMessage()    {}
func (*ScopedRds) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{4}
}

func (m *ScopedRds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScopedRds.Unmarshal(m, b)
}
func (m *ScopedRds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScopedRds.Marshal(b, m, deterministic)
}
func (m *ScopedRds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScopedRds.Merge(m, src)
}
func (m *ScopedRds) XXX_Size() int {
	return xxx_messageInfo_ScopedRds.Size(m)
}
func (m *ScopedRds) XXX_DiscardUnknown() {
	xxx_messageInfo_ScopedRds.DiscardUnknown(m)
}

var xxx_messageInfo_ScopedRds proto.InternalMessageInfo

func (m *ScopedRds) GetScopedRdsConfigSource() *v4alpha1.ConfigSource {
	if m != nil {
		return m.ScopedRdsConfigSource
	}
	return nil
}

type HttpFilter struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to ConfigType:
	//	*HttpFilter_TypedConfig
	ConfigType           isHttpFilter_ConfigType `protobuf_oneof:"config_type"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *HttpFilter) Reset()         { *m = HttpFilter{} }
func (m *HttpFilter) String() string { return proto.CompactTextString(m) }
func (*HttpFilter) ProtoMessage()    {}
func (*HttpFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{5}
}

func (m *HttpFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpFilter.Unmarshal(m, b)
}
func (m *HttpFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpFilter.Marshal(b, m, deterministic)
}
func (m *HttpFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpFilter.Merge(m, src)
}
func (m *HttpFilter) XXX_Size() int {
	return xxx_messageInfo_HttpFilter.Size(m)
}
func (m *HttpFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpFilter.DiscardUnknown(m)
}

var xxx_messageInfo_HttpFilter proto.InternalMessageInfo

func (m *HttpFilter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type isHttpFilter_ConfigType interface {
	isHttpFilter_ConfigType()
}

type HttpFilter_TypedConfig struct {
	TypedConfig *any.Any `protobuf:"bytes,4,opt,name=typed_config,json=typedConfig,proto3,oneof"`
}

func (*HttpFilter_TypedConfig) isHttpFilter_ConfigType() {}

func (m *HttpFilter) GetConfigType() isHttpFilter_ConfigType {
	if m != nil {
		return m.ConfigType
	}
	return nil
}

func (m *HttpFilter) GetTypedConfig() *any.Any {
	if x, ok := m.GetConfigType().(*HttpFilter_TypedConfig); ok {
		return x.TypedConfig
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HttpFilter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HttpFilter_TypedConfig)(nil),
	}
}

type RequestIDExtension struct {
	TypedConfig          *any.Any `protobuf:"bytes,1,opt,name=typed_config,json=typedConfig,proto3" json:"typed_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestIDExtension) Reset()         { *m = RequestIDExtension{} }
func (m *RequestIDExtension) String() string { return proto.CompactTextString(m) }
func (*RequestIDExtension) ProtoMessage()    {}
func (*RequestIDExtension) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd555527b41b4a7, []int{6}
}

func (m *RequestIDExtension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestIDExtension.Unmarshal(m, b)
}
func (m *RequestIDExtension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestIDExtension.Marshal(b, m, deterministic)
}
func (m *RequestIDExtension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestIDExtension.Merge(m, src)
}
func (m *RequestIDExtension) XXX_Size() int {
	return xxx_messageInfo_RequestIDExtension.Size(m)
}
func (m *RequestIDExtension) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestIDExtension.DiscardUnknown(m)
}

var xxx_messageInfo_RequestIDExtension proto.InternalMessageInfo

func (m *RequestIDExtension) GetTypedConfig() *any.Any {
	if m != nil {
		return m.TypedConfig
	}
	return nil
}

func init() {
	proto.RegisterEnum("envoy.extensions.filters.network.http_connection_manager.v4alpha.HttpConnectionManager_CodecType", HttpConnectionManager_CodecType_name, HttpConnectionManager_CodecType_value)
	proto.RegisterEnum("envoy.extensions.filters.network.http_connection_manager.v4alpha.HttpConnectionManager_ServerHeaderTransformation", HttpConnectionManager_ServerHeaderTransformation_name, HttpConnectionManager_ServerHeaderTransformation_value)
	proto.RegisterEnum("envoy.extensions.filters.network.http_connection_manager.v4alpha.HttpConnectionManager_ForwardClientCertDetails", HttpConnectionManager_ForwardClientCertDetails_name, HttpConnectionManager_ForwardClientCertDetails_value)
	proto.RegisterEnum("envoy.extensions.filters.network.http_connection_manager.v4alpha.HttpConnectionManager_Tracing_OperationName", HttpConnectionManager_Tracing_OperationName_name, HttpConnectionManager_Tracing_OperationName_value)
	proto.RegisterType((*HttpConnectionManager)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.HttpConnectionManager")
	proto.RegisterType((*HttpConnectionManager_Tracing)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.HttpConnectionManager.Tracing")
	proto.RegisterType((*HttpConnectionManager_InternalAddressConfig)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.HttpConnectionManager.InternalAddressConfig")
	proto.RegisterType((*HttpConnectionManager_SetCurrentClientCertDetails)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.HttpConnectionManager.SetCurrentClientCertDetails")
	proto.RegisterType((*HttpConnectionManager_UpgradeConfig)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.HttpConnectionManager.UpgradeConfig")
	proto.RegisterType((*Rds)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.Rds")
	proto.RegisterType((*ScopedRouteConfigurationsList)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.ScopedRouteConfigurationsList")
	proto.RegisterType((*ScopedRoutes)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.ScopedRoutes")
	proto.RegisterType((*ScopedRoutes_ScopeKeyBuilder)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.ScopedRoutes.ScopeKeyBuilder")
	proto.RegisterType((*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder")
	proto.RegisterType((*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder.HeaderValueExtractor")
	proto.RegisterType((*ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder.HeaderValueExtractor.KvElement")
	proto.RegisterType((*ScopedRds)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.ScopedRds")
	proto.RegisterType((*HttpFilter)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.HttpFilter")
	proto.RegisterType((*RequestIDExtension)(nil), "envoy.extensions.filters.network.http_connection_manager.v4alpha.RequestIDExtension")
}

func init() {
	proto.RegisterFile("envoy/extensions/filters/network/http_connection_manager/v4alpha/http_connection_manager.proto", fileDescriptor_0bd555527b41b4a7)
}

var fileDescriptor_0bd555527b41b4a7 = []byte{
	// 2650 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x39, 0xdd, 0x6f, 0x23, 0x57,
	0xf5, 0x19, 0xc7, 0xd9, 0xd8, 0xc7, 0x4e, 0x32, 0xb9, 0x9b, 0x64, 0x27, 0x4e, 0xb6, 0x4d, 0xd3,
	0xfe, 0xda, 0xfc, 0x4a, 0x71, 0x76, 0x93, 0x55, 0x11, 0x79, 0xa0, 0xb5, 0xb3, 0x4e, 0x9d, 0x6c,
	0x36, 0x09, 0x63, 0x6f, 0xdb, 0x2d, 0xd0, 0xe9, 0xcd, 0xcc, 0xb5, 0x3d, 0x5d, 0x7b, 0x66, 0xb8,
	0x77, 0xc6, 0x4d, 0x90, 0x80, 0xf2, 0x21, 0x40, 0x95, 0x40, 0x08, 0x21, 0x1e, 0x40, 0x88, 0x17,
	0x10, 0x52, 0xff, 0x02, 0x40, 0x88, 0xb7, 0x4a, 0xbc, 0xf2, 0xc2, 0x03, 0x4f, 0xfc, 0x09, 0x3c,
	0xa2, 0x3e, 0x20, 0x74, 0x3f, 0xc6, 0x1f, 0x89, 0xe3, 0xa0, 0xc6, 0x29, 0xbc, 0xdd, 0x39, 0xdf,
	0xe7, 0xdc, 0x73, 0xce, 0x3d, 0xf7, 0x0e, 0xbc, 0x4d, 0xbc, 0xb6, 0x7f, 0xba, 0x4e, 0x4e, 0x42,
	0xe2, 0x31, 0xd7, 0xf7, 0xd8, 0x7a, 0xcd, 0x6d, 0x86, 0x84, 0xb2, 0x75, 0x8f, 0x84, 0xef, 0xf9,
	0xf4, 0xc9, 0x7a, 0x23, 0x0c, 0x03, 0xcb, 0xf6, 0x3d, 0x8f, 0xd8, 0xa1, 0xeb, 0x7b, 0x56, 0x0b,
	0x7b, 0xb8, 0x4e, 0xe8, 0x7a, 0xfb, 0x1e, 0x6e, 0x06, 0x0d, 0x7c, 0x11, 0x3e, 0x1f, 0x50, 0x3f,
	0xf4, 0xd1, 0xab, 0x42, 0x7e, 0xbe, 0x2b, 0x3f, 0xaf, 0xe4, 0xe7, 0x95, 0xfc, 0xfc, 0x45, 0xfc,
	0x4a, 0x7e, 0xee, 0xff, 0xa5, 0x85, 0xb6, 0xef, 0xd5, 0xdc, 0xfa, 0x3a, 0xb6, 0x6d, 0xc2, 0x58,
	0xd3, 0xaf, 0xaf, 0xb7, 0x37, 0xbb, 0x1f, 0x52, 0x59, 0xee, 0xb3, 0x7d, 0xa4, 0xb6, 0x4f, 0x49,
	0xc7, 0x4a, 0x09, 0xb3, 0x98, 0x1f, 0x51, 0x9b, 0x28, 0xf2, 0xb5, 0x8b, 0xc9, 0x05, 0x81, 0xed,
	0x37, 0x15, 0xe5, 0xf3, 0x7d, 0x94, 0xd4, 0x8f, 0xc2, 0x2e, 0xa9, 0xf8, 0x1a, 0x68, 0x40, 0x3f,
	0x1d, 0xb3, 0xfd, 0x80, 0x38, 0x56, 0x2f, 0xf9, 0x4b, 0x7d, 0xe4, 0x21, 0xc5, 0x36, 0xe9, 0x0f,
	0xab, 0x00, 0xd1, 0x7e, 0x23, 0xc2, 0xd3, 0x80, 0x08, 0x5a, 0xd7, 0x13, 0x41, 0xb0, 0x23, 0x16,
	0xfa, 0x2d, 0x2b, 0xc4, 0x71, 0x14, 0x96, 0x7a, 0xe8, 0xda, 0x9b, 0xeb, 0x01, 0xa1, 0x36, 0xf1,
	0x42, 0x85, 0x5c, 0xac, 0xfb, 0x7e, 0xbd, 0x49, 0xa4, 0x83, 0xc7, 0x51, 0x6d, 0x1d, 0x7b, 0xa7,
	0x0a, 0xf5, 0xd4, 0x59, 0x94, 0x13, 0x51, 0xcc, 0xb7, 0x44, 0xe1, 0x97, 0xcf, 0xe2, 0x59, 0x48,
	0x23, 0x3b, 0xbc, 0x88, 0xfb, 0x3d, 0x8a, 0x83, 0x80, 0x6f, 0xb4, 0xc4, 0x3f, 0x2b, 0xad, 0xc2,
	0x9e, 0xe7, 0x87, 0x42, 0x2a, 0x5b, 0x77, 0x48, 0x40, 0x89, 0xdd, 0xab, 0xe2, 0x76, 0xe4, 0x04,
	0xb8, 0x8f, 0x86, 0x85, 0x38, 0x8c, 0x62, 0x19, 0xcf, 0x9c, 0x43, 0xb7, 0x09, 0xe5, 0x59, 0xe5,
	0x7a, 0xb1, 0xf3, 0xb7, 0xda, 0xb8, 0xe9, 0x3a, 0x98, 0xc7, 0x5d, 0x2d, 0x24, 0x62, 0xf5, 0x17,
	0x2f, 0xc0, 0x7c, 0x39, 0x0c, 0x83, 0xed, 0x4e, 0xa6, 0x3d, 0x94, 0x89, 0x86, 0x3e, 0xd0, 0x00,
	0x6c, 0xdf, 0x21, 0xb6, 0xc5, 0x43, 0x66, 0x68, 0x2b, 0xda, 0xda, 0xf4, 0x06, 0xce, 0x5f, 0x35,
	0x71, 0xf3, 0x03, 0xb5, 0xe5, 0xb7, 0xb9, 0xa6, 0xea, 0x69, 0x40, 0x8a, 0xa9, 0x8f, 0x8b, 0x13,
	0xdf, 0xd6, 0x12, 0xba, 0x66, 0xa6, 0xed, 0x18, 0x88, 0xd6, 0x20, 0xc3, 0x5d, 0xb6, 0x02, 0x4a,
	0x6a, 0xee, 0x89, 0x91, 0x58, 0xd1, 0xd6, 0xd2, 0xc5, 0xc9, 0x8f, 0x8b, 0x49, 0x9a, 0x58, 0xd1,
	0x4c, 0xe0, 0xb8, 0x23, 0x81, 0x42, 0x8f, 0x61, 0x9c, 0x3a, 0xcc, 0x18, 0x5f, 0xd1, 0xd6, 0x32,
	0x1b, 0xa5, 0xab, 0x9b, 0x6b, 0x3a, 0xac, 0x3c, 0x66, 0x72, 0x99, 0xa8, 0x02, 0x59, 0x91, 0xa6,
	0x96, 0xcc, 0x4c, 0x23, 0x29, 0x74, 0xe4, 0x95, 0x0e, 0x09, 0xcc, 0xcb, 0x44, 0xee, 0x70, 0xf3,
	0xaf, 0x6d, 0x81, 0x51, 0x59, 0x53, 0x1e, 0x33, 0x33, 0xb4, 0x0b, 0x45, 0x11, 0x4c, 0xf5, 0x96,
	0x00, 0x33, 0x9e, 0x16, 0x52, 0x0f, 0xae, 0x6e, 0x79, 0x45, 0x88, 0x15, 0x16, 0x70, 0x17, 0xb2,
	0xac, 0xe7, 0x1b, 0xf9, 0x90, 0x15, 0xfc, 0x4a, 0xa8, 0x31, 0xb1, 0x32, 0xbe, 0x96, 0xd9, 0xd8,
	0x1f, 0xcd, 0xf6, 0xee, 0x08, 0x1e, 0x33, 0xd3, 0xe8, 0xac, 0x19, 0x7a, 0x15, 0xa6, 0xb1, 0xe3,
	0x58, 0x11, 0x23, 0xd4, 0xc2, 0x75, 0xe2, 0x85, 0xc6, 0x0d, 0xe1, 0x68, 0x2e, 0x2f, 0x2b, 0x24,
	0x1f, 0x57, 0x48, 0xbe, 0xe8, 0xfb, 0xcd, 0xd7, 0x71, 0x33, 0x22, 0x66, 0x16, 0x3b, 0xce, 0x23,
	0x46, 0x68, 0x81, 0xd3, 0xa3, 0x53, 0x98, 0x54, 0xf5, 0x6d, 0x4c, 0x0a, 0x56, 0xeb, 0xba, 0x92,
	0xb1, 0x2a, 0xd5, 0x98, 0xb1, 0x3e, 0xe4, 0xc3, 0xb2, 0xed, 0xb7, 0x5a, 0xbe, 0x67, 0x09, 0x81,
	0x71, 0x1b, 0xb4, 0xfc, 0x40, 0xd4, 0x9b, 0xf1, 0xec, 0xa0, 0x4c, 0xe0, 0x9d, 0xb3, 0x4f, 0xd1,
	0x91, 0x62, 0x3b, 0x94, 0x5c, 0xe6, 0xa2, 0x94, 0x39, 0x00, 0x85, 0x6c, 0x98, 0x1f, 0xac, 0x29,
	0x25, 0x34, 0xad, 0x5f, 0xa2, 0xe9, 0xee, 0x59, 0x55, 0x37, 0x1b, 0x03, 0x94, 0x10, 0x58, 0xe0,
	0xe0, 0x8d, 0xf3, 0x5a, 0xd2, 0xff, 0x91, 0x96, 0x8d, 0xb3, 0x5a, 0xe6, 0x1a, 0x03, 0xa0, 0xe8,
	0x69, 0xc8, 0x30, 0x42, 0xdb, 0x84, 0x5a, 0x1e, 0x6e, 0x11, 0x03, 0x78, 0xed, 0x9a, 0x20, 0x41,
	0x07, 0xb8, 0x45, 0xd0, 0x9f, 0x34, 0x58, 0x56, 0x14, 0x0d, 0x82, 0x1d, 0x42, 0x79, 0x83, 0xf7,
	0x58, 0xcd, 0xa7, 0x2d, 0x51, 0x32, 0xc6, 0xaa, 0xe8, 0x3d, 0xf4, 0xba, 0xb6, 0xbb, 0x22, 0x74,
	0x97, 0x85, 0xea, 0x6a, 0x9f, 0xe6, 0x9e, 0x66, 0x94, 0x63, 0x17, 0x52, 0xa1, 0x2f, 0xc3, 0x42,
	0x0b, 0x9f, 0x58, 0x94, 0x7c, 0x35, 0x22, 0x2c, 0x54, 0x4e, 0x30, 0xeb, 0xc9, 0xb1, 0x71, 0x5b,
	0x04, 0x72, 0xf9, 0x5c, 0x8e, 0x3f, 0xda, 0xf5, 0xc2, 0xcd, 0x0d, 0x91, 0xe5, 0xc5, 0xf4, 0xc7,
	0xc5, 0x1b, 0x2f, 0x26, 0x8d, 0x77, 0x56, 0xc6, 0xcc, 0x9b, 0x2d, 0x7c, 0x62, 0x4a, 0x29, 0x52,
	0x11, 0x7b, 0x70, 0x8c, 0x76, 0xe1, 0x26, 0x0b, 0x29, 0xc1, 0x2d, 0xcb, 0x75, 0x9a, 0xc4, 0x0a,
	0xdd, 0x16, 0xf1, 0xa3, 0xd0, 0x30, 0x84, 0xe8, 0xc5, 0x73, 0xa2, 0xef, 0xab, 0x46, 0x63, 0xce,
	0x4a, 0xae, 0x5d, 0xa7, 0x49, 0xaa, 0x92, 0x07, 0x15, 0x61, 0x26, 0x36, 0x32, 0x16, 0xb3, 0x7c,
	0x99, 0x98, 0x69, 0xc5, 0x11, 0xcb, 0xf8, 0x02, 0x4c, 0x39, 0x14, 0xbb, 0x5e, 0x47, 0x42, 0xf6,
	0x32, 0x09, 0x59, 0x41, 0x1f, 0xf3, 0x3f, 0x84, 0x79, 0x87, 0x34, 0xf1, 0x29, 0x71, 0x2c, 0xbb,
	0xe9, 0xb3, 0xae, 0x43, 0xb9, 0xcb, 0xe4, 0xdc, 0x54, 0x7c, 0xdb, 0x9c, 0x2d, 0x16, 0xb7, 0x0d,
	0x20, 0xe7, 0x1d, 0xab, 0xe9, 0xd7, 0x8d, 0x29, 0xd1, 0xc6, 0x9e, 0xeb, 0x4f, 0xdc, 0xee, 0x3c,
	0xd4, 0xde, 0xcc, 0x17, 0xc4, 0xc7, 0xbe, 0x5f, 0x37, 0xd3, 0x38, 0x5e, 0xa2, 0x32, 0xa0, 0x88,
	0x11, 0x8b, 0x92, 0x96, 0x1f, 0x12, 0x0b, 0x3b, 0x0e, 0x25, 0x8c, 0x19, 0xd3, 0x97, 0x36, 0x28,
	0x3d, 0x62, 0xc4, 0x14, 0x4c, 0x05, 0xc9, 0x83, 0xd6, 0x61, 0xee, 0xa4, 0x56, 0xb3, 0xbc, 0xa8,
	0x65, 0x85, 0x34, 0x62, 0x21, 0x71, 0xac, 0x86, 0x1f, 0x30, 0xe3, 0xe6, 0x8a, 0xb6, 0x36, 0x65,
	0xce, 0x9e, 0xd4, 0x6a, 0x07, 0x51, 0xab, 0x2a, 0x31, 0x65, 0x3f, 0x60, 0xe8, 0x37, 0x1a, 0xdc,
	0x72, 0xbd, 0x90, 0x50, 0x0f, 0x37, 0x63, 0xcd, 0xf1, 0x01, 0xb3, 0x28, 0x0c, 0x68, 0x5d, 0x57,
	0xde, 0xef, 0x2a, 0xb5, 0xca, 0x76, 0x79, 0x20, 0x99, 0xf3, 0xee, 0x20, 0x30, 0x7a, 0x1e, 0x66,
	0xd8, 0x13, 0x37, 0xb0, 0xb8, 0x77, 0x7c, 0x82, 0xf1, 0x1c, 0x63, 0x7e, 0x45, 0x5b, 0x4b, 0x99,
	0x53, 0x1c, 0xfc, 0x66, 0xad, 0x56, 0x10, 0x40, 0xa4, 0xc3, 0x78, 0xdb, 0xc5, 0xc6, 0x82, 0xa8,
	0x72, 0xbe, 0x44, 0x7b, 0x70, 0xb3, 0x4e, 0x3c, 0x42, 0x71, 0x48, 0x3a, 0x25, 0xe2, 0x3a, 0xc6,
	0xcc, 0xa5, 0xd1, 0x9d, 0x8d, 0xd9, 0x54, 0x49, 0xec, 0x3a, 0xe8, 0x15, 0x58, 0x0e, 0x28, 0x11,
	0xa5, 0x68, 0xf1, 0x78, 0x88, 0xa8, 0xf5, 0x08, 0x5d, 0x11, 0x26, 0x2d, 0xc6, 0x34, 0x25, 0x45,
	0xd2, 0x15, 0xf0, 0x7b, 0x0d, 0x96, 0x6a, 0x3e, 0x7d, 0x0f, 0x53, 0x9e, 0x7e, 0x2e, 0xf1, 0x42,
	0xcb, 0x26, 0x34, 0xb4, 0x1c, 0x12, 0x62, 0xb7, 0xc9, 0x0c, 0x5d, 0xb4, 0x9a, 0xe0, 0xba, 0x42,
	0xbe, 0x23, 0x55, 0x6f, 0x0b, 0xcd, 0xdb, 0x84, 0x86, 0xf7, 0xa5, 0xde, 0x9e, 0x46, 0x63, 0xd4,
	0x2e, 0xa0, 0xe1, 0xb6, 0x3f, 0xcd, 0x48, 0x68, 0xd9, 0x11, 0xa5, 0xc2, 0xf0, 0x01, 0xf6, 0xcf,
	0x8a, 0xa8, 0xb2, 0xeb, 0x6b, 0x95, 0xe1, 0xb6, 0xd4, 0x7e, 0xce, 0x3c, 0x73, 0x89, 0x5d, 0x8c,
	0x44, 0x2f, 0x01, 0x0a, 0xa8, 0x7f, 0x72, 0x6a, 0xdd, 0xbd, 0x73, 0x87, 0xab, 0x0d, 0x5d, 0x2f,
	0x22, 0x06, 0x12, 0xdb, 0xa5, 0x0b, 0xcc, 0xdd, 0x3b, 0x77, 0xb6, 0x15, 0x1c, 0x11, 0xb8, 0x4b,
	0x89, 0xd8, 0x44, 0x2f, 0xb4, 0xdc, 0xa0, 0x7d, 0xef, 0x4c, 0x69, 0x5a, 0x98, 0x49, 0x70, 0x8b,
	0xa7, 0xa2, 0xc3, 0xd7, 0x2f, 0x1b, 0x73, 0x42, 0xd8, 0x8b, 0x1d, 0xc6, 0xdd, 0xa0, 0x7d, 0xaf,
	0xaf, 0x38, 0x0b, 0x8c, 0x83, 0x1e, 0x0a, 0x96, 0xdd, 0xa0, 0xfd, 0x32, 0xfa, 0x91, 0x06, 0x33,
	0x51, 0x50, 0xa7, 0xd8, 0x89, 0x67, 0x3a, 0x66, 0xdc, 0x12, 0x1d, 0x84, 0x5c, 0x57, 0x00, 0x1f,
	0x49, 0x75, 0xaa, 0xd6, 0xa6, 0xa3, 0xde, 0x4f, 0x86, 0x0a, 0x30, 0xed, 0xf1, 0x53, 0xa5, 0xe9,
	0x7e, 0x8d, 0x58, 0x01, 0x0e, 0x1b, 0xc6, 0x53, 0x97, 0x56, 0xc9, 0x54, 0x87, 0xe3, 0x08, 0x87,
	0x0d, 0xf4, 0x2c, 0x4c, 0xb5, 0x08, 0xad, 0x13, 0x8b, 0x35, 0x31, 0x6b, 0x10, 0x66, 0x3c, 0x23,
	0xc2, 0x92, 0x15, 0xc0, 0x8a, 0x84, 0xa1, 0xef, 0x69, 0x30, 0xd7, 0xad, 0x1a, 0xab, 0xe3, 0xa5,
	0xf1, 0x9c, 0x50, 0x57, 0x1d, 0xc1, 0xd8, 0xac, 0x2a, 0xee, 0x7e, 0x29, 0x96, 0x61, 0x22, 0x1a,
	0x57, 0x61, 0x07, 0x96, 0x7b, 0x7f, 0x02, 0x26, 0xd5, 0xb4, 0x85, 0x5e, 0x81, 0x19, 0x95, 0xd1,
	0x0c, 0xb7, 0x82, 0x26, 0x9f, 0xf3, 0xe4, 0x14, 0xbf, 0xa0, 0xcc, 0xe1, 0xf7, 0x10, 0xde, 0xc2,
	0x8f, 0xe4, 0xd5, 0xcd, 0x9c, 0x96, 0xe4, 0x15, 0x45, 0xcd, 0x05, 0x50, 0xec, 0x39, 0x7e, 0xab,
	0x2b, 0x20, 0x39, 0x5c, 0x80, 0x24, 0xef, 0x08, 0x28, 0x80, 0xee, 0xb7, 0x09, 0xc5, 0xcd, 0x66,
	0x57, 0xc2, 0xc4, 0x50, 0x09, 0x33, 0x8a, 0xbe, 0x23, 0xc2, 0x80, 0xc9, 0x36, 0xa1, 0xc7, 0x3e,
	0x23, 0x62, 0xbe, 0x4d, 0x99, 0xf1, 0x27, 0x7a, 0x00, 0xfc, 0x74, 0x17, 0xbb, 0xca, 0x6f, 0xa5,
	0x56, 0x93, 0x78, 0xf5, 0xb0, 0xa1, 0x46, 0xd9, 0xa1, 0x13, 0x82, 0xa9, 0xb7, 0xf0, 0x09, 0xdf,
	0xdc, 0x2a, 0xae, 0xef, 0x0b, 0x2e, 0x54, 0x80, 0x4c, 0xf7, 0x82, 0xcb, 0xa7, 0x42, 0x9e, 0xb4,
	0x2b, 0xbd, 0x46, 0xaa, 0xd1, 0x95, 0x1b, 0xbb, 0x2d, 0x28, 0xab, 0xb8, 0x6e, 0x82, 0x1d, 0x2f,
	0x19, 0xba, 0x0f, 0xa9, 0x80, 0xfa, 0x6d, 0xd7, 0x21, 0x54, 0xcd, 0x7b, 0x6b, 0xfd, 0xc7, 0xa6,
	0xb8, 0x65, 0x77, 0x36, 0x54, 0xed, 0x92, 0x48, 0x6b, 0xb3, 0xc3, 0xb9, 0xba, 0x06, 0x53, 0x87,
	0x01, 0x91, 0x07, 0xb4, 0x18, 0xe6, 0x32, 0x30, 0xb9, 0x7b, 0xf0, 0x9a, 0x59, 0xaa, 0x54, 0xf4,
	0x31, 0x04, 0x70, 0xa3, 0x24, 0xd7, 0xda, 0xd6, 0x3b, 0x3f, 0xff, 0xe8, 0x07, 0x4f, 0x7d, 0x09,
	0x1e, 0x7f, 0xf2, 0xd4, 0xda, 0x1c, 0x3e, 0xae, 0xef, 0x25, 0x53, 0x9a, 0x9e, 0xd8, 0x4b, 0xa6,
	0x12, 0xfa, 0xb8, 0x39, 0xed, 0xc7, 0x56, 0x89, 0xa9, 0xd3, 0x34, 0xce, 0x0e, 0x67, 0x35, 0x9f,
	0x8a, 0xd8, 0xe5, 0x3e, 0xd4, 0x60, 0x7e, 0xe0, 0x49, 0x88, 0x9e, 0x81, 0x6c, 0xe4, 0xb9, 0x27,
	0x16, 0xf3, 0xed, 0x27, 0x24, 0x64, 0xe2, 0x0a, 0x9c, 0x32, 0x33, 0x1c, 0x56, 0x91, 0xa0, 0x2d,
	0x8f, 0x3b, 0xe5, 0x42, 0x7d, 0xf4, 0x4e, 0x0d, 0x34, 0x29, 0xf7, 0xcb, 0x04, 0x2c, 0x0d, 0xe9,
	0xc1, 0xe8, 0x1e, 0x4c, 0xb2, 0xe8, 0xf8, 0x5d, 0x62, 0x87, 0xc2, 0xda, 0xe1, 0x9d, 0x23, 0x26,
	0x45, 0x08, 0x92, 0xfc, 0x10, 0x11, 0xe5, 0x96, 0x32, 0xc5, 0x1a, 0xcd, 0xc1, 0x84, 0xdd, 0xc0,
	0xae, 0xa7, 0xd2, 0x58, 0x7e, 0xf0, 0xd3, 0xdd, 0xf1, 0x98, 0x28, 0xab, 0x94, 0xc9, 0x97, 0x1c,
	0x12, 0x51, 0x57, 0x94, 0x49, 0xca, 0xe4, 0xcb, 0xad, 0x90, 0xc7, 0xc4, 0x87, 0xd6, 0xe8, 0x63,
	0x32, 0xc4, 0x73, 0xb9, 0xed, 0xb9, 0xdf, 0x25, 0x60, 0xaa, 0xaf, 0xc5, 0x8a, 0x4d, 0x54, 0x2d,
	0xbe, 0xf3, 0x8e, 0x91, 0x36, 0x33, 0x0a, 0x26, 0x1e, 0x17, 0x6a, 0x30, 0x19, 0x5f, 0x83, 0x13,
	0xd7, 0x70, 0x0d, 0x8e, 0x85, 0xf3, 0xcd, 0x21, 0x1e, 0x3e, 0x6e, 0x12, 0x47, 0x35, 0xb6, 0xa1,
	0x9b, 0xa3, 0x48, 0xb7, 0x6a, 0x3c, 0x9c, 0x18, 0xac, 0xd1, 0x87, 0xb3, 0x2f, 0x50, 0xab, 0x2f,
	0x43, 0xba, 0xf3, 0x08, 0x83, 0x52, 0x90, 0x2c, 0x3c, 0xaa, 0x1e, 0xea, 0x63, 0x28, 0x0d, 0x13,
	0xe5, 0x6a, 0xf5, 0xe8, 0xae, 0xae, 0xc5, 0xcb, 0x0d, 0x3d, 0x11, 0x2f, 0x37, 0xf5, 0xf1, 0xd5,
	0x0a, 0xe4, 0x2e, 0xbe, 0x40, 0xa1, 0x29, 0x48, 0x1f, 0xbe, 0x5e, 0x32, 0xdf, 0x30, 0x77, 0xab,
	0x25, 0x7d, 0x0c, 0xcd, 0x81, 0x5e, 0x38, 0x3a, 0x2a, 0x1d, 0xdc, 0xb7, 0x76, 0x77, 0xac, 0x42,
	0xb1, 0x52, 0x3a, 0xa8, 0xea, 0x1a, 0xd2, 0x21, 0x7b, 0x54, 0xa8, 0x54, 0xac, 0x6a, 0xd9, 0x3c,
	0x7c, 0xf4, 0x5a, 0x59, 0x4f, 0xac, 0x9e, 0x82, 0x71, 0xd1, 0xa8, 0x84, 0xb2, 0x90, 0xaa, 0x14,
	0x0e, 0x76, 0xab, 0xbb, 0x6f, 0x71, 0x89, 0x3a, 0x64, 0x77, 0x0e, 0xcd, 0x37, 0x0a, 0xe6, 0x7d,
	0xeb, 0xf0, 0x60, 0xff, 0xb1, 0xae, 0x21, 0x04, 0xd3, 0x4a, 0x87, 0x42, 0xe8, 0x09, 0x4e, 0x15,
	0xf3, 0x58, 0x95, 0x52, 0x55, 0x1f, 0x47, 0xb7, 0xe0, 0x66, 0x61, 0xff, 0x8d, 0xc2, 0xe3, 0x8a,
	0xd5, 0xc7, 0x9e, 0xdc, 0x7a, 0x93, 0xc7, 0xbb, 0x02, 0x5f, 0x1c, 0x79, 0xbc, 0x8b, 0x0b, 0x30,
	0x23, 0xdf, 0x8f, 0x58, 0x40, 0x6c, 0xb7, 0xe6, 0x12, 0x8a, 0xc6, 0xff, 0x59, 0xd4, 0xf6, 0x92,
	0xa9, 0x25, 0x7d, 0x79, 0x2f, 0x99, 0xca, 0xe8, 0x59, 0x33, 0xdb, 0x7b, 0xc7, 0x5b, 0xfd, 0x9b,
	0x06, 0xe3, 0xa6, 0xc3, 0xd0, 0xeb, 0x30, 0xd5, 0xf7, 0x52, 0xab, 0x8a, 0xfb, 0x85, 0x21, 0x17,
	0x74, 0xb9, 0xab, 0x15, 0x41, 0x2e, 0xa6, 0xcb, 0x0f, 0xc4, 0x74, 0x99, 0xb5, 0x7b, 0xe0, 0x68,
	0x13, 0x66, 0x7b, 0x5f, 0xb4, 0xe4, 0x05, 0xfd, 0xcc, 0xe3, 0xda, 0x4c, 0xcf, 0x6b, 0x15, 0xef,
	0xf0, 0x5b, 0x3b, 0x3c, 0x40, 0x05, 0x78, 0xe5, 0x2a, 0x01, 0x32, 0x1d, 0xb6, 0xfa, 0xad, 0x04,
	0xdc, 0xee, 0x79, 0xa3, 0xea, 0x7b, 0x25, 0x63, 0xfb, 0x2e, 0x0b, 0xd1, 0x37, 0x60, 0xa9, 0xf7,
	0x6d, 0x4c, 0x59, 0x19, 0x93, 0x18, 0x9a, 0x28, 0xd6, 0x7b, 0xc3, 0xde, 0xdf, 0x2e, 0x92, 0x2f,
	0x22, 0xf2, 0x13, 0x2d, 0x91, 0xd2, 0xcc, 0x45, 0x76, 0x91, 0x0d, 0x23, 0x39, 0xb2, 0x86, 0x7a,
	0xb8, 0xfa, 0xdb, 0x19, 0xc8, 0xf6, 0xbe, 0xd3, 0xa1, 0x25, 0x48, 0x8a, 0x4d, 0xd0, 0xfa, 0x37,
	0x41, 0x00, 0xd1, 0x4f, 0x35, 0x98, 0x15, 0xd6, 0x5a, 0x4f, 0xc8, 0xa9, 0x75, 0x1c, 0xb9, 0x4d,
	0x7e, 0x78, 0x27, 0x44, 0x2e, 0xbc, 0x3d, 0xda, 0x07, 0x43, 0xf9, 0xf1, 0x80, 0x9c, 0x16, 0xa5,
	0x96, 0x9e, 0x14, 0x9a, 0x61, 0xfd, 0x28, 0xf4, 0x15, 0x98, 0xa5, 0x4e, 0x7c, 0x69, 0x8d, 0x33,
	0x74, 0xfc, 0x93, 0x66, 0xe8, 0x0c, 0x75, 0x58, 0x2f, 0x0a, 0x7d, 0xa8, 0xc1, 0xca, 0x90, 0x34,
	0xb0, 0x9a, 0x2e, 0x0b, 0xd5, 0xa0, 0x67, 0x8d, 0x34, 0x08, 0xe7, 0xf7, 0xab, 0x3c, 0x66, 0xde,
	0x66, 0x43, 0x53, 0xb6, 0x09, 0x10, 0xdb, 0xea, 0x30, 0x35, 0x3c, 0x3e, 0x18, 0x99, 0x55, 0xe2,
	0x2d, 0x3a, 0xcd, 0xe2, 0x8f, 0xdc, 0xbf, 0xd2, 0x30, 0x73, 0x66, 0xa3, 0xd0, 0xcf, 0x34, 0x48,
	0xd7, 0x28, 0xae, 0xb7, 0x88, 0x17, 0xc6, 0x35, 0xe2, 0x5d, 0x6f, 0x72, 0xe4, 0x77, 0x94, 0xbe,
	0xde, 0x64, 0x91, 0xd5, 0xd5, 0x35, 0x25, 0xf7, 0x8f, 0x49, 0x98, 0x39, 0x43, 0x88, 0xfe, 0xa8,
	0xc1, 0x82, 0x7a, 0xf3, 0x6b, 0xf3, 0x63, 0x8f, 0x5f, 0x45, 0x28, 0xb6, 0x43, 0x9f, 0xaa, 0x16,
	0xf7, 0x1d, 0xed, 0xd3, 0x35, 0x3d, 0x2f, 0x4f, 0x31, 0x71, 0x06, 0x97, 0x62, 0x5b, 0xca, 0x63,
	0xe6, 0x5c, 0x63, 0x00, 0x3c, 0xf7, 0xab, 0x09, 0x98, 0x1b, 0xc4, 0x30, 0xbc, 0x8c, 0x3f, 0x03,
	0xb3, 0xa4, 0x49, 0x5a, 0xe2, 0xa6, 0x43, 0x02, 0x4c, 0x31, 0x77, 0x57, 0x74, 0x5d, 0x53, 0x57,
	0x88, 0x4a, 0x0c, 0x47, 0x0b, 0x30, 0xe1, 0x7a, 0x0e, 0x39, 0x11, 0x05, 0x35, 0x55, 0x1e, 0x33,
	0xe5, 0x27, 0xaf, 0x8a, 0x49, 0x45, 0xac, 0x92, 0xff, 0x87, 0xff, 0x0b, 0xa1, 0xca, 0x3f, 0x68,
	0x97, 0xa4, 0x55, 0xe5, 0x31, 0x33, 0x36, 0x30, 0xf7, 0x77, 0x0d, 0xd2, 0x1d, 0x04, 0xfa, 0x3f,
	0x48, 0x77, 0xfd, 0x3e, 0x13, 0xa1, 0x2e, 0x06, 0x2d, 0xc2, 0xf8, 0x13, 0x72, 0x7a, 0xf6, 0x38,
	0xe2, 0xb0, 0xad, 0x1f, 0x6b, 0xbc, 0x33, 0x7f, 0xa0, 0xc1, 0xf7, 0xb5, 0x11, 0xf5, 0xe6, 0xab,
	0x7a, 0xbb, 0xf5, 0x5d, 0x61, 0xd2, 0x37, 0xe1, 0xeb, 0xff, 0x55, 0x83, 0x8a, 0xd3, 0x90, 0x55,
	0x25, 0x24, 0xc6, 0xdd, 0x2d, 0x9f, 0x5b, 0xf5, 0x2e, 0x34, 0x3e, 0x2d, 0xab, 0x8a, 0x19, 0x48,
	0x72, 0xc5, 0x62, 0xb2, 0xd9, 0xb2, 0xb8, 0xf6, 0xb7, 0xe0, 0xcd, 0xeb, 0xd2, 0xbe, 0x75, 0xc8,
	0x15, 0xec, 0x41, 0x79, 0x54, 0x0a, 0x8a, 0xb7, 0x40, 0x8f, 0xcf, 0xb1, 0xbe, 0x21, 0x6d, 0xf5,
	0x23, 0x0d, 0xd2, 0x9d, 0x2e, 0x8c, 0xde, 0x05, 0xa3, 0xdb, 0xe6, 0xad, 0x11, 0xcd, 0x66, 0xf3,
	0x9d, 0xc6, 0xde, 0x4b, 0xb0, 0xb5, 0xcf, 0x7d, 0x7c, 0x0d, 0x4a, 0x23, 0xf0, 0xd1, 0x61, 0xab,
	0x7f, 0xd5, 0x00, 0xba, 0x97, 0x93, 0xe1, 0x8d, 0xea, 0xf3, 0x90, 0xe5, 0x7b, 0xe9, 0xf4, 0xff,
	0xf0, 0x9c, 0x3b, 0x77, 0x6b, 0x29, 0x78, 0xa7, 0xe5, 0x31, 0x33, 0x23, 0x68, 0xa5, 0xe9, 0x5b,
	0x0f, 0xb9, 0xd1, 0x65, 0xd8, 0xb9, 0xea, 0x14, 0x2d, 0xcd, 0x2c, 0x4e, 0x41, 0x46, 0x05, 0x99,
	0x2b, 0xd9, 0x4b, 0xa6, 0xc6, 0xf5, 0xa4, 0xba, 0xe9, 0xdf, 0x90, 0x88, 0xd5, 0x5f, 0x6b, 0x80,
	0xce, 0xbf, 0x3a, 0xa1, 0xcf, 0x9d, 0xf1, 0x41, 0xbb, 0xd8, 0x87, 0x7e, 0x0f, 0x1e, 0x71, 0x0f,
	0x8e, 0xe0, 0xe0, 0x4a, 0x63, 0xee, 0x39, 0x7b, 0x8a, 0xed, 0x3f, 0xbc, 0xff, 0xe7, 0xbf, 0xdc,
	0x48, 0xe8, 0xe3, 0x70, 0xe0, 0xfa, 0x32, 0x47, 0xc4, 0xf3, 0xe7, 0x95, 0x7b, 0x77, 0x31, 0x37,
	0xf0, 0xd6, 0x21, 0xfe, 0xc6, 0x1d, 0x69, 0xc7, 0x37, 0x84, 0xa7, 0x9b, 0xff, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0xa8, 0xf8, 0x05, 0x8b, 0xda, 0x22, 0x00, 0x00,
}
