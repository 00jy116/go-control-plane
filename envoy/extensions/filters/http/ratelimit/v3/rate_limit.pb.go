// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/extensions/filters/http/ratelimit/v3/rate_limit.proto

package envoy_extensions_filters_http_ratelimit_v3

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/ratelimit/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RateLimit struct {
	Domain                         string                     `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Stage                          uint32                     `protobuf:"varint,2,opt,name=stage,proto3" json:"stage,omitempty"`
	RequestType                    string                     `protobuf:"bytes,3,opt,name=request_type,json=requestType,proto3" json:"request_type,omitempty"`
	Timeout                        *duration.Duration         `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	FailureModeDeny                bool                       `protobuf:"varint,5,opt,name=failure_mode_deny,json=failureModeDeny,proto3" json:"failure_mode_deny,omitempty"`
	RateLimitedAsResourceExhausted bool                       `protobuf:"varint,6,opt,name=rate_limited_as_resource_exhausted,json=rateLimitedAsResourceExhausted,proto3" json:"rate_limited_as_resource_exhausted,omitempty"`
	RateLimitService               *v3.RateLimitServiceConfig `protobuf:"bytes,7,opt,name=rate_limit_service,json=rateLimitService,proto3" json:"rate_limit_service,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                   `json:"-"`
	XXX_unrecognized               []byte                     `json:"-"`
	XXX_sizecache                  int32                      `json:"-"`
}

func (m *RateLimit) Reset()         { *m = RateLimit{} }
func (m *RateLimit) String() string { return proto.CompactTextString(m) }
func (*RateLimit) ProtoMessage()    {}
func (*RateLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf645dbc1fee5d54, []int{0}
}

func (m *RateLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateLimit.Unmarshal(m, b)
}
func (m *RateLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateLimit.Marshal(b, m, deterministic)
}
func (m *RateLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateLimit.Merge(m, src)
}
func (m *RateLimit) XXX_Size() int {
	return xxx_messageInfo_RateLimit.Size(m)
}
func (m *RateLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_RateLimit.DiscardUnknown(m)
}

var xxx_messageInfo_RateLimit proto.InternalMessageInfo

func (m *RateLimit) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *RateLimit) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *RateLimit) GetRequestType() string {
	if m != nil {
		return m.RequestType
	}
	return ""
}

func (m *RateLimit) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *RateLimit) GetFailureModeDeny() bool {
	if m != nil {
		return m.FailureModeDeny
	}
	return false
}

func (m *RateLimit) GetRateLimitedAsResourceExhausted() bool {
	if m != nil {
		return m.RateLimitedAsResourceExhausted
	}
	return false
}

func (m *RateLimit) GetRateLimitService() *v3.RateLimitServiceConfig {
	if m != nil {
		return m.RateLimitService
	}
	return nil
}

func init() {
	proto.RegisterType((*RateLimit)(nil), "envoy.extensions.filters.http.ratelimit.v3.RateLimit")
}

func init() {
	proto.RegisterFile("envoy/extensions/filters/http/ratelimit/v3/rate_limit.proto", fileDescriptor_bf645dbc1fee5d54)
}

var fileDescriptor_bf645dbc1fee5d54 = []byte{
	// 478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcb, 0x8e, 0xd3, 0x30,
	0x14, 0x25, 0x9d, 0xbe, 0xc6, 0xc3, 0x63, 0xc8, 0x86, 0x30, 0x82, 0xd2, 0x19, 0x36, 0x55, 0x17,
	0x36, 0xb4, 0x0b, 0x10, 0xac, 0x08, 0x65, 0x83, 0x06, 0x69, 0x64, 0xd8, 0x47, 0x6e, 0x7d, 0xdb,
	0x5a, 0x4a, 0xed, 0x60, 0x3b, 0x51, 0xf3, 0x07, 0x88, 0x4f, 0xe0, 0x7f, 0xf8, 0x11, 0x3e, 0xa3,
	0x2b, 0x14, 0x3b, 0x69, 0x34, 0xb3, 0x9a, 0x9d, 0xef, 0xbd, 0xe7, 0x9c, 0x6b, 0x9d, 0x7b, 0xd0,
	0x47, 0x90, 0x85, 0x2a, 0x09, 0xec, 0x2d, 0x48, 0x23, 0x94, 0x34, 0x64, 0x2d, 0x52, 0x0b, 0xda,
	0x90, 0xad, 0xb5, 0x19, 0xd1, 0xcc, 0x42, 0x2a, 0x76, 0xc2, 0x92, 0x62, 0xee, 0x8a, 0xc4, 0x55,
	0x38, 0xd3, 0xca, 0xaa, 0x70, 0xea, 0xc8, 0xb8, 0x25, 0xe3, 0x9a, 0x8c, 0x2b, 0x32, 0x3e, 0x92,
	0x71, 0x31, 0xbf, 0x78, 0xed, 0x17, 0xad, 0x94, 0x5c, 0x8b, 0xcd, 0x1d, 0xdd, 0xd4, 0x78, 0xc1,
	0x8b, 0xd1, 0x46, 0xa9, 0x4d, 0x0a, 0xc4, 0x55, 0xcb, 0x7c, 0x4d, 0x78, 0xae, 0x99, 0x15, 0x4a,
	0xd6, 0xf3, 0xcb, 0x9c, 0x67, 0x8c, 0x30, 0x29, 0x95, 0x75, 0x6d, 0x43, 0x0a, 0xd0, 0xd5, 0x66,
	0x21, 0x37, 0x35, 0xe4, 0x59, 0xc1, 0x52, 0xc1, 0x99, 0x05, 0xd2, 0x3c, 0xfc, 0xe0, 0xea, 0xdf,
	0x09, 0x3a, 0xa5, 0xcc, 0xc2, 0x75, 0xb5, 0x36, 0x7c, 0x85, 0xfa, 0x5c, 0xed, 0x98, 0x90, 0x51,
	0x30, 0x0e, 0x26, 0xa7, 0xf1, 0xe0, 0x10, 0x77, 0x75, 0x67, 0x1c, 0xd0, 0xba, 0x1d, 0xbe, 0x44,
	0x3d, 0x63, 0xd9, 0x06, 0xa2, 0xce, 0x38, 0x98, 0x3c, 0x72, 0xf3, 0x69, 0x27, 0x42, 0xd4, 0x77,
	0xc3, 0x05, 0x7a, 0xa8, 0xe1, 0x67, 0x0e, 0xc6, 0x26, 0xb6, 0xcc, 0x20, 0x3a, 0x71, 0x2a, 0x97,
	0x87, 0x78, 0xa4, 0x5f, 0xd0, 0xa1, 0x90, 0x16, 0xb4, 0x64, 0x29, 0x1d, 0x56, 0xde, 0xb8, 0x57,
	0x77, 0xa9, 0xec, 0x96, 0x3e, 0xa0, 0x67, 0x35, 0xed, 0x47, 0x99, 0x41, 0x38, 0x47, 0x03, 0x2b,
	0x76, 0xa0, 0x72, 0x1b, 0x75, 0xc7, 0xc1, 0xe4, 0x6c, 0xf6, 0x1c, 0x7b, 0x07, 0x70, 0xe3, 0x00,
	0x5e, 0xd4, 0x0e, 0xd0, 0x06, 0x19, 0x4e, 0xd1, 0xd3, 0x35, 0x13, 0x69, 0xae, 0x21, 0xd9, 0x29,
	0x0e, 0x09, 0x07, 0x59, 0x46, 0xbd, 0x71, 0x30, 0x19, 0xd2, 0x27, 0xf5, 0xe0, 0x9b, 0xe2, 0xb0,
	0x00, 0x59, 0x86, 0x5f, 0xd1, 0x55, 0x7b, 0x35, 0xe0, 0x09, 0x33, 0x89, 0x06, 0xa3, 0x72, 0xbd,
	0x82, 0x04, 0xf6, 0x5b, 0x96, 0x1b, 0x0b, 0x3c, 0xea, 0x3b, 0xf2, 0x48, 0x37, 0xee, 0x00, 0xff,
	0x64, 0x68, 0x0d, 0xfb, 0xd2, 0xa0, 0x42, 0x81, 0xc2, 0x56, 0x2b, 0x31, 0xa0, 0x0b, 0xb1, 0x82,
	0x68, 0xe0, 0xfe, 0xfd, 0x16, 0xfb, 0x28, 0xf8, 0xf3, 0xde, 0xba, 0x3c, 0x3e, 0x9a, 0xfe, 0xdd,
	0x53, 0x3e, 0x3b, 0x4c, 0x3c, 0x3c, 0xc4, 0xbd, 0xdf, 0x41, 0xe7, 0x3c, 0xa0, 0xe7, 0xfa, 0x0e,
	0xe2, 0xc3, 0xbb, 0x3f, 0x7f, 0x7f, 0x8d, 0x66, 0xe8, 0xcd, 0x2d, 0x51, 0x9f, 0xad, 0x36, 0x5a,
	0x75, 0x14, 0x8b, 0x59, 0xbb, 0x21, 0xbe, 0x46, 0xef, 0x85, 0xf2, 0x7f, 0xc9, 0xb4, 0xda, 0x97,
	0xf8, 0xfe, 0x09, 0x8d, 0x1f, 0x1f, 0x65, 0x6e, 0x2a, 0xf3, 0x6f, 0x82, 0x65, 0xdf, 0x5d, 0x61,
	0xfe, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x67, 0xab, 0xd8, 0xd7, 0x25, 0x03, 0x00, 0x00,
}
